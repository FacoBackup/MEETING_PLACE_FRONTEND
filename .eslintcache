[{"/home/gustavo/Meeting-Place_frontend/src/index.js":"1","/home/gustavo/Meeting-Place_frontend/src/reportWebVitals.js":"2","/home/gustavo/Meeting-Place_frontend/src/AppRoutes.js":"3","/home/gustavo/Meeting-Place_frontend/src/Host.js":"4","/home/gustavo/Meeting-Place_frontend/src/pages/community/Community.js":"5","/home/gustavo/Meeting-Place_frontend/src/pages/search/Search.js":"6","/home/gustavo/Meeting-Place_frontend/src/pages/conversation/Conversation.js":"7","/home/gustavo/Meeting-Place_frontend/src/pages/profile/Profile.js":"8","/home/gustavo/Meeting-Place_frontend/src/pages/signup/Signup.js":"9","/home/gustavo/Meeting-Place_frontend/src/pages/home/Home.js":"10","/home/gustavo/Meeting-Place_frontend/src/pages/signin/SignIn.js":"11","/home/gustavo/Meeting-Place_frontend/src/pages/dashboard/Dashboard.js":"12","/home/gustavo/Meeting-Place_frontend/src/pages/profile/components/bar/ProfileBarComponent.js":"13","/home/gustavo/Meeting-Place_frontend/src/pages/conversation/components/NewNewMessageComponent.js":"14","/home/gustavo/Meeting-Place_frontend/src/pages/conversation/components/ConversationBarComponent.js":"15","/home/gustavo/Meeting-Place_frontend/src/pages/conversation/components/SendMessageComponent.js":"16","/home/gustavo/Meeting-Place_frontend/src/pages/community/component/NewCommunityComponent.js":"17","/home/gustavo/Meeting-Place_frontend/src/pages/search/components/SearchComponent.js":"18","/home/gustavo/Meeting-Place_frontend/src/pages/profile/components/options/UserCommunitiesComponent.js":"19","/home/gustavo/Meeting-Place_frontend/src/pages/profile/components/options/UserAboutComponent.js":"20","/home/gustavo/Meeting-Place_frontend/src/pages/profile/components/options/ProfileSettingsComponent.js":"21","/home/gustavo/Meeting-Place_frontend/src/pages/profile/components/following/FollowingComponent.js":"22","/home/gustavo/Meeting-Place_frontend/src/pages/profile/components/followers/FollowersComponent.js":"23","/home/gustavo/Meeting-Place_frontend/src/pages/topic/components/TopicComponent.js":"24","/home/gustavo/Meeting-Place_frontend/src/pages/shared/functions/social/FollowUser.js":"25","/home/gustavo/Meeting-Place_frontend/src/pages/shared/functions/social/UnfollowUser.js":"26","/home/gustavo/Meeting-Place_frontend/src/pages/topic/components/creation/TopicCreationComponent.js":"27","/home/gustavo/Meeting-Place_frontend/src/pages/dashboard/component/news/FrontNewsComponent.js":"28","/home/gustavo/Meeting-Place_frontend/src/pages/dashboard/component/bar/FrontSideBarComponent.js":"29","/home/gustavo/Meeting-Place_frontend/src/pages/dashboard/component/trending/FrontTrendingComponent.js":"30","/home/gustavo/Meeting-Place_frontend/src/pages/topic/components/box/TopicBoxComponet.js":"31","/home/gustavo/Meeting-Place_frontend/src/pages/shared/functions/community/FollowCommunity.js":"32","/home/gustavo/Meeting-Place_frontend/src/pages/community/component/about/CommunityAboutComponent.js":"33","/home/gustavo/Meeting-Place_frontend/src/pages/community/component/users/CommunityUsersComponent.js":"34","/home/gustavo/Meeting-Place_frontend/src/pages/community/component/related/CommunityRelatedComponent.js":"35","/home/gustavo/Meeting-Place_frontend/src/pages/conversation/components/box/MessageBoxComponent.js":"36","/home/gustavo/Meeting-Place_frontend/src/pages/shared/components/CommunitySearchComponent.js":"37","/home/gustavo/Meeting-Place_frontend/src/pages/shared/functions/topics/UpdateTopic.js":"38","/home/gustavo/Meeting-Place_frontend/src/pages/shared/functions/topics/DeleteTopic.js":"39","/home/gustavo/Meeting-Place_frontend/src/pages/profile/components/notification/NotificationComponent.js":"40","/home/gustavo/Meeting-Place_frontend/src/pages/community/component/creation/CommunityCreationComponent.js":"41","/home/gustavo/Meeting-Place_frontend/src/pages/topic/components/trending/TrendingComponent.js":"42","/home/gustavo/Meeting-Place_frontend/src/pages/community/component/settings/CommunitySettingsComponent.js":"43"},{"size":315,"mtime":1611678721459,"results":"44","hashOfConfig":"45"},{"size":402,"mtime":1611678721463,"results":"46","hashOfConfig":"45"},{"size":1385,"mtime":1611678721459,"results":"47","hashOfConfig":"45"},{"size":80,"mtime":1611679670902,"results":"48","hashOfConfig":"45"},{"size":1528,"mtime":1611678721459,"results":"49","hashOfConfig":"45"},{"size":1384,"mtime":1611678721463,"results":"50","hashOfConfig":"45"},{"size":2712,"mtime":1611678721459,"results":"51","hashOfConfig":"45"},{"size":15364,"mtime":1611678721463,"results":"52","hashOfConfig":"45"},{"size":7949,"mtime":1611678721463,"results":"53","hashOfConfig":"45"},{"size":2107,"mtime":1611678721459,"results":"54","hashOfConfig":"45"},{"size":5989,"mtime":1611678721463,"results":"55","hashOfConfig":"45"},{"size":726,"mtime":1611678721459,"results":"56","hashOfConfig":"45"},{"size":11672,"mtime":1611678721463,"results":"57","hashOfConfig":"45"},{"size":8709,"mtime":1611678721459,"results":"58","hashOfConfig":"45"},{"size":5914,"mtime":1611678721459,"results":"59","hashOfConfig":"45"},{"size":6596,"mtime":1611678721459,"results":"60","hashOfConfig":"45"},{"size":16037,"mtime":1611678721459,"results":"61","hashOfConfig":"45"},{"size":11752,"mtime":1611678721463,"results":"62","hashOfConfig":"45"},{"size":3918,"mtime":1611678721463,"results":"63","hashOfConfig":"45"},{"size":7405,"mtime":1611678721463,"results":"64","hashOfConfig":"45"},{"size":8555,"mtime":1611678721463,"results":"65","hashOfConfig":"45"},{"size":5894,"mtime":1611678721463,"results":"66","hashOfConfig":"45"},{"size":5821,"mtime":1611678721463,"results":"67","hashOfConfig":"45"},{"size":5384,"mtime":1611678721463,"results":"68","hashOfConfig":"45"},{"size":534,"mtime":1611678721463,"results":"69","hashOfConfig":"45"},{"size":543,"mtime":1611678721463,"results":"70","hashOfConfig":"45"},{"size":12988,"mtime":1611680736186,"results":"71","hashOfConfig":"45"},{"size":1269,"mtime":1611678721459,"results":"72","hashOfConfig":"45"},{"size":1467,"mtime":1611678721459,"results":"73","hashOfConfig":"45"},{"size":1797,"mtime":1611678721459,"results":"74","hashOfConfig":"45"},{"size":14122,"mtime":1611678721463,"results":"75","hashOfConfig":"45"},{"size":559,"mtime":1611678721463,"results":"76","hashOfConfig":"45"},{"size":13053,"mtime":1611678721459,"results":"77","hashOfConfig":"45"},{"size":9385,"mtime":1611678721459,"results":"78","hashOfConfig":"45"},{"size":2974,"mtime":1611678721459,"results":"79","hashOfConfig":"45"},{"size":4785,"mtime":1611678721459,"results":"80","hashOfConfig":"45"},{"size":3242,"mtime":1611678721463,"results":"81","hashOfConfig":"45"},{"size":702,"mtime":1611678721463,"results":"82","hashOfConfig":"45"},{"size":639,"mtime":1611678721463,"results":"83","hashOfConfig":"45"},{"size":4525,"mtime":1611678721463,"results":"84","hashOfConfig":"45"},{"size":9140,"mtime":1611678721459,"results":"85","hashOfConfig":"45"},{"size":549,"mtime":1611678721463,"results":"86","hashOfConfig":"45"},{"size":7380,"mtime":1611678721459,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"1eeay3c",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"90"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"90"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"90"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"/home/gustavo/Meeting-Place_frontend/src/index.js",[],["178","179"],"/home/gustavo/Meeting-Place_frontend/src/reportWebVitals.js",[],"/home/gustavo/Meeting-Place_frontend/src/AppRoutes.js",[],"/home/gustavo/Meeting-Place_frontend/src/Host.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/community/Community.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/search/Search.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/conversation/Conversation.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/profile/Profile.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/signup/Signup.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/home/Home.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/signin/SignIn.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/dashboard/Dashboard.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/profile/components/bar/ProfileBarComponent.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/conversation/components/NewNewMessageComponent.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/conversation/components/ConversationBarComponent.js",["180"],"import React, {Component} from 'react';\nimport Cookies from 'universal-cookie';\nimport axios from 'axios';\nimport \"../styles/ConversationBarStyle.css\";\nimport Badge from '@material-ui/core/Badge';\nimport {Link} from 'react-router-dom';\nimport Avatar from '@material-ui/core/Avatar'\nimport {getTheme} from '@fluentui/react';\nimport Host from '../../../Host'\nimport {MailRounded, SettingsRounded} from '@material-ui/icons';\nimport Button from \"@material-ui/core/Button\";\n\nclass ConversationBarComponent extends Component {\n    unreadMessages;\n    constructor() {\n        super(null)\n        this.state = {\n            cookies: new Cookies(),\n            conversations: [],\n            theme: getTheme(),\n            newest: true,\n            profiles: [],\n            lastPage: null\n        }\n    }\n\n    componentDidMount() {\n        this.fetchConversations().catch(r => console.log(r))\n        this.timerID = setInterval(\n            () => this.tick(),\n            10000\n        );\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n\n    tick() {\n        this.setState({\n            date: new Date(),\n        });\n    }\n\n    async fetchConversations() {\n        try {\n            await axios({\n                method: 'get',\n                url: Host() + 'api/conversation/all',\n                headers: {\"Authorization\": 'Bearer ' + this.state.cookies.get(\"JWT\")},\n            }).then(res => {\n                console.log(\"CONVERSATIONS -> \" + JSON.stringify(res.data))\n                this.setState({\n                    conversations: res.data\n                })\n            })\n                .catch(error => {\n                    console.log(error);\n                });\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    renderSubject(data, isGroup) {\n        switch (isGroup) {\n            case true: {\n\n                return (\n                    <div className=\"conversation_box_container \" key={data.conversationID}>\n\n                        <Link className=\"conversation_box_content\" key={data.conversationID}\n                              style={{textDecoration: 'none', color: 'white'}}\n                              to={\"/chat/\" + ((data.name).replace(this.state.cookies.get('ID'), \"\")) + \"/\" + JSON.stringify(isGroup) + \"/\" + data.id}>\n\n                            <Avatar src={data.imageURL}/>\n                            <ul>\n                                <li style={{\n                                    fontWeight: '500',\n                                    textTransform: \"capitalize\"\n                                }}>{(\"\" + data.name)}</li>\n                                <li style={{\n                                    fontWeight: '300',\n                                    fontSize:'15px',\n                                    textTransform: \"capitalize\",\n                                    color:'#aaadb1'\n                                }}>Group</li>\n                            </ul>\n\n                            <Badge color=\"secondary\" style={{marginLeft:'10%'}} badgeContent={data.unreadMessages}>\n                                <MailRounded/>\n                            </Badge>\n\n                        </Link>\n                    </div>\n                )\n            }\n            case false: {\n\n                return (\n                    <div className=\"conversation_box_container\" key={data.conversationID}>\n\n                        <Link className=\"conversation_box_content\" key={data.conversationID}\n                              style={{textDecoration: 'none', color: 'white'}}\n                              to={\"/chat/\" + (data.userID) + \"/\" + JSON.stringify(isGroup) + \"/\" + data.id}>\n\n                            <Avatar src={data.imageURL}/>\n                            <ul>\n                                <li style={{\n                                    fontWeight: '500',\n                                    textTransform: \"capitalize\"\n                                }}>{(\"\" + data.userName)}</li>\n                                <li style={{\n                                    fontWeight: '300',\n                                    fontSize:'15px',\n                                    textTransform: \"capitalize\",\n                                    color:'#aaadb1'\n                                }}>Private</li>\n                            </ul>\n                            <Badge color=\"secondary\" style={{marginLeft:'10%'}} badgeContent={data.unreadMessages}>\n                                <MailRounded/>\n                            </Badge>\n\n                        </Link>\n                    </div>\n                )\n            }\n            default: {\n                return null\n            }\n        }\n    }\n    sortConversation(){\n        this.setState({\n            newest: !this.state.newest\n        })\n        // this.state.conversations.sort((a,b) => {\n        //\n        // })\n    }\n    render() {\n        return (\n            <div className=\"right_top_half_container\">\n                <div className=\"component_title_container\" style={{width:'15vw'}}>\n                    <p style={{\n                        marginLeft: '1vw',\n                        fontWeight: '400',\n                        color:'#ededed',\n                        textTransform: 'capitalize'\n                    }}>Conversations</p>\n                    <Button\n                        style={{textTransform: 'capitalize'}}\n                        variant={\"outlined\"}\n                        onClick={() => this.sortConversation()}>{this.state.newest === true ? \"Newest\" : \"Unseen\"}</Button>\n                </div>\n                <div className=\"conversation_personas\">\n                    {this.state.conversations.map((chat) =>\n\n                        this.renderSubject(chat, chat.isGroup)\n                    )}\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ConversationBarComponent;","/home/gustavo/Meeting-Place_frontend/src/pages/conversation/components/SendMessageComponent.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/community/component/NewCommunityComponent.js",["181"],"import React from 'react';\nimport \"../../shared/styles/PageModel.css\"\nimport \"../../profile/styles/DedicatedProfile.css\"\nimport \"../../shared/styles/DedicatedPagesStyle.css\"\nimport Conversations from \"../../conversation/components/ConversationBarComponent\"\nimport axios from 'axios';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport ProfileBar from '../../profile/components/bar/ProfileBarComponent'\nimport Avatar from '@material-ui/core/Avatar'\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\nimport Button from '@material-ui/core/Button'\nimport ListAltRoundedIcon from '@material-ui/icons/ListAltRounded';\nimport PeopleAltRoundedIcon from '@material-ui/icons/PeopleAltRounded';\nimport HelpIcon from '@material-ui/icons/Help';\nimport TopicComponent from '../../topic/components/TopicComponent'\nimport Host from '../../../Host'\nimport CommunityUsersComponent from './users/CommunityUsersComponent'\nimport CommunityAboutComponent from './about/CommunityAboutComponent'\nimport CommunityRelatedComponent from './related/CommunityRelatedComponent'\nimport SubjectRoundedIcon from '@material-ui/icons/SubjectRounded';\nimport CommunitySettingsComponent from \"./settings/CommunitySettingsComponent\";\nclass CommunityComponent extends React.Component {\n    constructor(params) {\n        super()\n        this.state = {\n            community: {},\n            token: params.token,\n            communityID: params.communityID,\n            membersOption: false,\n            all: false,\n            mods: false,\n            followers: false,\n            topic: true,\n            date: new Date(),\n            related: false,\n            about: false,\n            settings: false,\n            dropdownSelectedOption: null\n        }\n    }\n\n    componentDidMount() {\n        this.fetchData().catch(e => console.log(e))\n    }\n\n\n    async fetchData() {\n      try{\n          await axios({\n              method: 'patch',\n              url: Host() + 'api/get/community/by/id',\n              headers: {\"Authorization\": 'Bearer ' + this.state.token},\n              data: {\n                  communityID: this.state.communityID\n              }\n          }).then(res => {\n              this.setState({\n                  community: res.data\n              })\n          })\n              .catch(error => console.log(error))\n      }catch (e) {\n          console.log(e)\n      }\n\n    }\n\n\n    optionSelect() {\n        switch (true) {\n            case this.state.related: {\n                return (\n\n                    <CommunityRelatedComponent communityID={this.state.communityID}/>\n\n                )\n            }\n\n            case (this.state.membersOption): {\n\n                return (\n\n                    <CommunityUsersComponent token={this.state.token} role={this.state.community.role}\n                                             communityID={this.state.communityID} options={1}/>\n\n                )\n            }\n            case this.state.all: {\n\n                return (\n\n                    <CommunityUsersComponent token={this.state.token} role={this.state.community.role}\n                                             communityID={this.state.communityID}/>\n\n                )\n            }\n            case this.state.mods: {\n                return (\n\n                    <CommunityUsersComponent token={this.state.token} communityID={this.state.communityID} options={2}/>\n\n                )\n            }\n            case this.state.followers: {\n\n                return (\n\n                    <CommunityUsersComponent token={this.state.token} communityID={this.state.communityID} options={0}/>\n\n                )\n            }\n            case this.state.settings:{\n                console.log('here')\n                return(\n                    <CommunitySettingsComponent community={this.state.community}/>\n                )\n            }\n            case this.state.topic: {\n                return (\n\n                    <TopicComponent community={true} token={this.state.token} timeline={false}\n                                    subjectID={this.state.communityID}/>\n\n                )\n            }\n\n            // case this.state.about: {\n            //     return (\n            //\n            //         <CommunityAboutComponent community={this.state.community}/>\n            //\n            //     )\n            // }\n\n            default: {\n                return (\n                    <TopicComponent community={true} token={this.state.token} timeline={false}\n                                    subjectID={this.state.communityID}/>\n                )\n            }\n        }\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div className=\"profile_center_component\">\n                    <div className='profile_background_image_container'>\n                        <img className='profile_background_image' alt=\"BACKGROUD\"\n                             src={(typeof this.state.community.backgroundImageURL !== 'undefined' && this.state.community.backgroundImageURL !== null) ? this.state.community.backgroundImageURL : \"https://www.beautycolorcode.com/2f2f2f-1440x900.png\"}/>\n                    </div>\n                    <div className=\"dedicated_component_container\">\n\n                        <div className=\"profile_content_container\">\n                            <div className='profile_container'>\n                                <div style={{marginTop: '1vh', textAlign: 'center'}}>\n                                    <Avatar\n                                        style={{margin: 'auto', height: '4vw', width: '4vw'}}\n                                        src={this.state.community.imageURL}\n                                        alt=\"community\"\n                                    />\n                                    <p style={{fontSize: '18px', fontWeight: '400', textTransform:'capitalize'}}>{this.state.community.name}</p>\n                                    <div style={{\n                                        display: 'flex',\n                                        justifyContent: 'center',\n                                        alignItems: 'center',\n                                        color: '#aaadb1'\n                                    }}>\n                                        <SubjectRoundedIcon/>\n                                        {this.state.community.about}\n                                    </div>\n                                </div>\n                                <div>\n                                    <ButtonGroup size=\"medium\" variant=\"text\">\n                                        <Button style={{display: 'grid', lineHeight: '7px', fontSize: '15px', width:'5vw',textTransform:'capitalize',color:(this.state.topics === true? \"#39adf6\": \"#aaadb1\")}}\n                                                color={this.state.topics === true ? \"primary\" : \"default\"}\n                                                onClick={() => this.setState({\n                                                    topics: true,\n                                                    followers: false,\n                                                    mods: false,\n                                                    related: false,\n                                                    membersOption: false,\n                                                    all: false,\n                                                    settings:false\n                                                })}\n                                        >Topics <p style={{color: 'white'}}>{this.state.community.topics}</p></Button>\n\n                                        <Button style={{display: 'grid', lineHeight: '7px', fontSize: '15px', width:'5vw',textTransform:'capitalize',color:(this.state.followers === true? \"#39adf6\": \"#aaadb1\")}}\n                                                color={this.state.followers === true ? \"primary\" : \"default\"}\n                                                onClick={() => this.setState({\n                                                    topics: false,\n                                                    followers: true,\n                                                    mods: false,\n                                                    related: false,\n                                                    membersOption: false,\n                                                    all: false,\n                                                    settings:false\n                                                })}\n                                        >Followers <p style={{color: 'white'}}>{this.state.community.followers}</p>\n                                        </Button>\n\n                                        <Button style={{display: 'grid', lineHeight: '7px', fontSize: '15px', width:'5vw',textTransform:'capitalize',color:(this.state.membersOption === true? \"#39adf6\": \"#aaadb1\")}}\n                                                color={this.state.membersOption === true ? \"primary\" : \"default\"}\n                                                onClick={() => this.setState({\n                                                    topics: false,\n                                                    followers: false,\n                                                    mods: false,\n                                                    related: false,\n                                                    membersOption: true,\n                                                    all: false,\n                                                    settings:false\n                                                })}\n                                        >Members <p style={{color: 'white'}}>{this.state.community.members}</p>\n                                        </Button>\n\n\n                                        <Button style={{display: 'grid', lineHeight: '7px', fontSize: '15px', width:'5vw',textTransform:'capitalize',color:(this.state.mods === true? \"#39adf6\": \"#aaadb1\")}}\n                                                onClick={() => this.setState({\n                                                    topics: false,\n                                                    followers: false,\n                                                    mods: true,\n                                                    related: false,\n                                                    membersOption: false,\n                                                    all: false,\n                                                    settings:false\n                                                })}\n                                        >Mods <p style={{color: 'white'}}>{this.state.community.mods}</p>\n                                        </Button>\n                                    </ButtonGroup>\n                                </div>\n                            </div>\n                            <div className='options_container'>\n                                <Button variant=\"outlined\" style={{gridColumn: '1', gridRow: '1', textTransform:'capitalize',  display:'grid',color:(this.state.all === true? \"#39adf6\": \"white\"), backgroundColor:(this.state.all === true ? \"#303741\" : 'transparent')}}\n                                        className='option_content'\n                                        onClick={() => this.setState({\n                                            topics: false,\n                                            followers: false,\n                                            membersOption: false,\n                                            mods: false,\n                                            about: false,\n                                            related: false,\n                                            all: true,\n                                            settings:false\n                                        })}\n                                >\n\n                                    <ListAltRoundedIcon style={{height: '33px', width: '33px',  color:(this.state.all === true? \"#39adf6\": \"#aaadb1\"), margin:'auto'}}/>\n                                    All Related Users\n                                </Button>\n                                <Button variant=\"outlined\" disabled style={{gridColumn: '1', gridRow: '2',textTransform:'capitalize',  display:'grid'}}\n                                        className='option_content'>\n\n                                    <HelpIcon style={{height: '33px', width: '33px',  color:(this.state.community === true? \"#39adf6\": \"#aaadb1\"), margin:'auto'}}/>\n                                    help\n                                </Button>\n                                <Button variant={\"outlined\"} style={{\n                                    gridColumn: '2',\n                                    gridRow: '1',\n                                    textTransform:'capitalize',\n                                    display:'grid',\n                                    backgroundColor: (this.state.related === true ? \"#303741\" : 'transparent'),\n                                    color:(this.state.related === true? \"#39adf6\": \"white\")\n                                }} className='option_content'\n                                        onClick={() => this.setState({\n                                            topics: false,\n                                            followers: false,\n                                            membersOption: false,\n                                            mods: false,\n                                            about: false,\n                                            related: true,\n                                            all: false,\n                                            settings:false\n                                        })}\n                                >\n                                    <PeopleAltRoundedIcon style={{height: '33px', width: '33px', color:(this.state.related === true? \"#39adf6\": \"#aaadb1\"), margin:'auto'}}/>\n                                    related Communities\n                                </Button>\n                                {this.state.community.role === \"MODERATOR\" ?\n                                    <Button variant={ \"outlined\"} style={{ backgroundColor: (this.state.settings === true ? \"#303741\" : 'transparent'),gridColumn: '2', gridRow: '2',textTransform:'capitalize',  display:'grid', color:(this.state.settings === true? \"#39adf6\": \"white\")}}\n                                            className='option_content'\n                                            onClick={() =>\n                                                this.setState({\n                                                  topics: false,\n                                                  followers: false,\n                                                  membersOption: false,\n                                                  mods: false,\n                                                  about: false,\n                                                  related: false,\n                                                  all: false,\n                                                  settings:true\n                                  })}\n                                    >\n\n                                    <SettingsIcon style={{height: '33px', width: '33px',  color:(this.state.settings === true? \"#39adf6\": \"#aaadb1\"), margin:'auto'}}/>\n                                    Settings\n                                </Button>: null}\n\n                            </div>\n                            <div>\n                                {this.optionSelect()}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"left_components\">\n                    <ProfileBar home={true}/>\n                </div>\n                <div className=\"right_components\">\n                    <Conversations/>\n                </div>\n            </div>\n        )\n\n    }\n}\n\nexport default CommunityComponent;","/home/gustavo/Meeting-Place_frontend/src/pages/search/components/SearchComponent.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/profile/components/options/UserCommunitiesComponent.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/profile/components/options/UserAboutComponent.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/profile/components/options/ProfileSettingsComponent.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/profile/components/following/FollowingComponent.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/profile/components/followers/FollowersComponent.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/topic/components/TopicComponent.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/shared/functions/social/FollowUser.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/shared/functions/social/UnfollowUser.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/topic/components/creation/TopicCreationComponent.js",["182"],"import React, {useState} from 'react';\nimport \"../../../shared/styles/TopicStyles.css\"\nimport \"../../../shared/styles/DedicatedPagesStyle.css\"\nimport Modal from \"@material-ui/core/Modal\"\nimport TextField from '@material-ui/core/TextField'\nimport axios from 'axios';\nimport DeleteRounded from '@material-ui/icons/DeleteRounded'\nimport CommunitySearchComponent from '../../../shared/components/CommunitySearchComponent'\nimport Host from '../../../../Host'\nimport Button from '@material-ui/core/Button';\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nclass TopicCreationComponent extends React.Component {\n    constructor(params) {\n        super(params)\n        this.state = {\n            title: '',\n            body: '',\n            token: params.token,\n            imageURL: null,\n            communityID: null,\n            openModal: false,\n            imageModal: false,\n            communityModal: false,\n            date: new Date(),\n            selectedCommunity: {},\n            error: null,\n            errorMessage: null,\n            hashes: [],\n            hashedText: []\n\n        }\n\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    componentDidMount() {\n        this.timerID = setInterval(\n            () => this.tick(),\n            1000\n        );\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n\n    tick() {\n        const parsedCommunity = (sessionStorage.getItem(\"SELECTED_COMMUNITY\") !== null) ? JSON.parse(sessionStorage.getItem(\"SELECTED_COMMUNITY\")) : null\n        if (typeof this.state.selectedCommunity.communityID === 'undefined')\n            this.setState({\n                date: new Date(),\n                selectedCommunity: (parsedCommunity !== null) ? parsedCommunity : this.state.selectedCommunity,\n            })\n        if (typeof this.state.selectedCommunity.communityID !== 'undefined') {\n            sessionStorage.removeItem(\"SELECTED_COMMUNITY\")\n            this.setState({\n\n                communityModal: false,\n\n            })\n        }\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n\n    }\n\n    getFile(event) {\n\n        this.setState({\n            imageURL: null\n        })\n\n        let reader = new FileReader();\n\n        if (!event[0].name.match(/.(jpg|jpeg|png|gif|webp)$/i)) {\n            alert('not an image')\n            this.setState({\n                imageURL: null\n            })\n        } else {\n            reader.readAsDataURL(event[0]);\n            reader.onload = () => {\n                this.setState({\n                    imageURL: reader.result\n                })\n            }\n        }\n    }\n\n    async createTopic() {\n        try {\n            if(this.state.body.length > 0 && this.state.title.length>0){\n                const hashtags = this.state.body.match(/#[a-z,0-9]+/gi)\n                console.log(hashtags)\n                await axios({\n                    method: 'post',\n                    url: Host() + 'api/topic',\n                    headers: {\"Authorization\": 'Bearer ' + this.state.token},\n                    data: {\n                        header: this.state.title,\n                        body: this.state.body,\n                        imageURL: this.state.imageURL,\n                        communityID: this.state.selectedCommunity.communityID,\n                        mainTopicID: null,\n                        hashTags: hashtags\n                    }\n                }).then(() => {\n                    this.setState({\n                        error: false\n                    })\n                }).catch(error => {\n                    this.setState({\n                        error: true,\n                        errorMessage: error.message\n                    })\n                    console.log(error)\n                })\n            }\n            else{\n                this.setState({\n                    error: true,\n                    errorMessage: \"Missing Field\"\n                })\n            }\n        } catch (error) {\n            this.setState({\n                error: true,\n                errorMessage: error.message\n            })\n            console.log(error)\n        }\n    }\n\n    imageRender() {\n        if (this.state.imageURL !== null)\n            return (\n                <div style={{display: 'grid', justifyContent: 'center'}}>\n                    <div style={{display: 'flex', justifyContent: 'center'}}>\n                        <img style={{margin: 'auto', width: '30vw', borderRadius: '8px'}} alt=\"topic\"\n                             src={this.state.imageURL}/>\n\n                    </div>\n                    <Button style={{backgroundColor: 'red', color: 'white'}} variant=\"contained\"\n                            onClick={() => this.setState({\n                                imageURL: null\n                            })}><DeleteRounded/> Remove</Button>\n                </div>\n            )\n    }\n\n    renderSelectedCommunity() {\n        if (typeof this.state.selectedCommunity.communityID !== 'undefined')\n            return (\n                <div style={{marginTop: '1vh'}}>\n                    <p style={{fontWeight:'500',textAlign: 'center'}}>Selected Community</p>\n                    <div className={\"subject_content_container\"} style={{width:'17vw'}}>\n\n                        <Avatar\n                            style={{width: '50px', height: '50px'}}\n                            src={this.state.selectedCommunity.imageURL }\n                           alt={\"community\"}\n                        />\n                        <ul>\n                            <li>{this.state.selectedCommunity.name}</li>\n                            <li style={{fontWeight: '500', color: '#aaadb1'}}>{this.state.selectedCommunity.about}</li>\n                        </ul>\n                        <Button style={{backgroundColor:'red', color:'white', display:'flex', alignItems:\"center\"}} onClick={() => this.setState({\n                            selectedCommunity: {}\n                        })}>Remove</Button>\n                    </div>\n                </div>\n\n            )\n    }\n\n    modalRender() {\n        return (\n            <Modal\n                open={this.state.communityModal}\n                onClose={() => this.setState({\n                    communityModal: false\n                })}\n            >\n                <div className='modal_container'>\n                    <div style={{textAlign:'center'}}>\n                        <h3 style={{fontWeight: '500'}}>Link your community to another one</h3>\n                        <p style={{fontWeight: '500', color: '#aaadb1'}}>The members of this community will appear in the main community too.</p>\n                        <p style={{fontWeight: '500', color: '#aaadb1'}}>You have to be a moderator in the main community to be able to link the two.</p>\n                    </div>\n                    <CommunitySearchComponent token={this.state.token}/>\n                    <Button onClick={() => this.setState({\n                        communityModal: false\n                    })} variant=\"contained\" disableElevation>Cancel</Button>\n\n                </div>\n            </Modal>\n        )\n    }\n    finishProcedure(){\n        if(this.state.error === true){\n            this.setState({\n                error: null\n            })\n        }\n        else\n            window.location.reload()\n    }\n    Alert(props) {\n        return (<MuiAlert elevation={4} variant=\"filled\" {...props}/>)\n    }\n    render() {\n        return (\n            <div className=\"topic_creation_container\">\n                {this.modalRender()}\n                <div className=\"topic_creation_title\">\n                    <h3 style={{fontWeight: '400'}}>Express Yourself</h3>\n                </div>\n                <div className=\"topic_creation_top_buttons\">\n\n                    <Button\n                        disableElevation style={{color:'white', textTransform:'capitalize'}}\n                        variant='outlined'\n                        onClick={() =>\n                            this.setState({\n                                openModal: true,\n                                imageModal: false,\n                                communityModal: true\n                            })}>\n                        Community\n                    </Button>\n\n                    {/* <Toggle label=\"Visibility\" defaultChecked onText=\"Only Fans\" offText=\"Public\"/> */}\n                    <input id=\"contained-button-file\" type=\"file\" style={{display: 'none'}}\n                           onChange={event => this.getFile(event.target.files)}/>\n                    <label htmlFor=\"contained-button-file\">\n\n                        <Button\n                            component=\"span\"\n                            disableElevation style={{color:'white', textTransform:'capitalize'}}\n                            variant='outlined'\n                        >\n\n                            Upload image\n                        </Button>\n                    </label>\n\n                </div>\n                <div className=\"topic_creation_fields\">\n                    <TextField\n                        placeholder=\"Title\"\n                        multiline\n\n                        variant=\"outlined\"\n                        name='title'\n                        style={{\n                            backgroundColor: '#303741',\n                            borderRadius: '2px'\n                        }}\n                        InputProps={{\n                            style: {\n                                color: 'white'\n                            }\n                        }}\n                        onChange={this.handleChange}/>\n                    <TextField\n                        placeholder=\"Body\"\n                        multiline\n                        autoAdjustHeight\n                        variant=\"outlined\"\n\n                        style={{\n                            backgroundColor: '#303741',\n                            borderRadius: '2px'\n\n                        }}\n                        InputProps={{\n                            style: {\n                                color: 'white'\n                            }\n                        }}\n                        name='body'\n                        onChange={this.handleChange}/>\n                   {/*<div className={\"tags_container\"}>*/}\n                   {/*    <div className={\"tag_selection_container\"}>*/}\n                   {/*        <TextField*/}\n                   {/*            placeholder=\"Tag\"*/}\n                   {/*            disabled*/}\n                   {/*            name='tag'*/}\n                   {/*            variant={\"outlined\"}*/}\n                   {/*            style={{width:\"81.5%\"}}*/}\n                   {/*            InputProps={{*/}\n                   {/*                style: {*/}\n                   {/*                    color: 'white'*/}\n                   {/*                }*/}\n                   {/*            }}*/}\n                   {/*            onChange={this.handleChange}/>*/}\n                   {/*        <Button disabled*/}\n                   {/*                disableElevation style={{color:'white', textTransform:'capitalize'}}*/}\n                   {/*            variant='outlined'*/}\n                   {/*        >add</Button>*/}\n                   {/*    </div>*/}\n                   {/*</div>*/}\n                    {typeof this.state.selectedCommunity.communityID === 'undefined' ?\n                        <div>\n                            <div style={{marginBottom: '1vh'}}>\n                                {this.imageRender()}\n                            </div>\n\n                            {this.renderSelectedCommunity()}\n                        </div> :\n                        <div>\n                            <div style={{marginBottom: '1vh'}}>\n                                {this.renderSelectedCommunity()}\n                            </div>\n\n                            {this.imageRender()}\n                        </div>\n                    }\n                </div>\n                <div className=\"topic_creation_bottom_buttons\">\n                    <Button\n                        disableElevation\n                        style={{border:'#39adf6 2px solid', color:'white', textTransform:'capitalize'}}\n                        variant='outlined'\n\n                        onClick={() => this.createTopic()}>Create</Button>\n                </div>\n                <Snackbar open={this.state.error !== null} autoHideDuration={4000} onClose={() =>this.finishProcedure()}>\n                    <this.Alert\n                        severity={!this.state.error? \"success\":\"error\"}>{this.state.error ? (\"Some error occurred (\"+this.state.errorMessage+\")\") : \"Created With Success\"}</this.Alert>\n                </Snackbar>\n            </div>\n        );\n    }\n}\n\nexport default TopicCreationComponent;","/home/gustavo/Meeting-Place_frontend/src/pages/dashboard/component/news/FrontNewsComponent.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/dashboard/component/bar/FrontSideBarComponent.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/dashboard/component/trending/FrontTrendingComponent.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/topic/components/box/TopicBoxComponet.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/shared/functions/community/FollowCommunity.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/community/component/about/CommunityAboutComponent.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/community/component/users/CommunityUsersComponent.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/community/component/related/CommunityRelatedComponent.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/conversation/components/box/MessageBoxComponent.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/shared/components/CommunitySearchComponent.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/shared/functions/topics/UpdateTopic.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/shared/functions/topics/DeleteTopic.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/profile/components/notification/NotificationComponent.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/community/component/creation/CommunityCreationComponent.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/topic/components/trending/TrendingComponent.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/community/component/settings/CommunitySettingsComponent.js",[],{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":10,"column":22,"nodeType":"189","messageId":"190","endLine":10,"endColumn":37},{"ruleId":"187","severity":1,"message":"191","line":18,"column":8,"nodeType":"189","messageId":"190","endLine":18,"endColumn":31},{"ruleId":"187","severity":1,"message":"192","line":1,"column":16,"nodeType":"189","messageId":"190","endLine":1,"endColumn":24},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],"no-unused-vars","'SettingsRounded' is defined but never used.","Identifier","unusedVar","'CommunityAboutComponent' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]
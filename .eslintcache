[{"/home/gustavo/Meeting-Place_frontend/src/index.js":"1","/home/gustavo/Meeting-Place_frontend/src/reportWebVitals.js":"2","/home/gustavo/Meeting-Place_frontend/src/AppRoutes.js":"3","/home/gustavo/Meeting-Place_frontend/src/pages/search/Search.js":"4","/home/gustavo/Meeting-Place_frontend/src/pages/chat/Chat.js":"5","/home/gustavo/Meeting-Place_frontend/src/components/topics/TopicCreation.js":"6","/home/gustavo/Meeting-Place_frontend/src/components/conversations/ConversationBar.js":"7","/home/gustavo/Meeting-Place_frontend/src/components/messages/Messages.js":"8","/home/gustavo/Meeting-Place_frontend/src/pages/authentication/SignIn.js":"9","/home/gustavo/Meeting-Place_frontend/src/pages/user/Signup.js":"10","/home/gustavo/Meeting-Place_frontend/src/components/messages/box/MessageBox.js":"11","/home/gustavo/Meeting-Place_frontend/src/components/conversations/ConversationInfo.js":"12","/home/gustavo/Meeting-Place_frontend/src/pages/social/following/Following.js":"13","/home/gustavo/Meeting-Place_frontend/src/pages/social/followers/Followers.js":"14","/home/gustavo/Meeting-Place_frontend/src/pages/timeline/Timeline.js":"15","/home/gustavo/Meeting-Place_frontend/src/pages/community/Community.js":"16","/home/gustavo/Meeting-Place_frontend/src/pages/community/CommunityOptions.js":"17","/home/gustavo/Meeting-Place_frontend/src/components/community/CommunityComponent.js":"18","/home/gustavo/Meeting-Place_frontend/src/components/topics/TopicComponent.js":"19","/home/gustavo/Meeting-Place_frontend/src/components/community/CommunityCreationComponent.js":"20","/home/gustavo/Meeting-Place_frontend/src/components/community/UserCommunitiesComponent.js":"21","/home/gustavo/Meeting-Place_frontend/src/components/community/CommunitySearchComponent.js":"22","/home/gustavo/Meeting-Place_frontend/src/components/search/user/NewUserSearch.js":"23","/home/gustavo/Meeting-Place_frontend/src/components/profile/ProfileBar.js":"24","/home/gustavo/Meeting-Place_frontend/src/pages/profile/Profile.js":"25"},{"size":306,"mtime":1610057758633,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1610057758633,"results":"28","hashOfConfig":"27"},{"size":1232,"mtime":1610104596968,"results":"29","hashOfConfig":"27"},{"size":923,"mtime":1610057781325,"results":"30","hashOfConfig":"27"},{"size":2330,"mtime":1610057781325,"results":"31","hashOfConfig":"27"},{"size":7273,"mtime":1610107033468,"results":"32","hashOfConfig":"27"},{"size":4601,"mtime":1610057781321,"results":"33","hashOfConfig":"27"},{"size":7727,"mtime":1610109933902,"results":"34","hashOfConfig":"27"},{"size":3619,"mtime":1610057758633,"results":"35","hashOfConfig":"27"},{"size":4769,"mtime":1610057758633,"results":"36","hashOfConfig":"27"},{"size":1306,"mtime":1610057781321,"results":"37","hashOfConfig":"27"},{"size":3081,"mtime":1610057781321,"results":"38","hashOfConfig":"27"},{"size":4470,"mtime":1610063455813,"results":"39","hashOfConfig":"27"},{"size":4645,"mtime":1610063447921,"results":"40","hashOfConfig":"27"},{"size":1224,"mtime":1610057781325,"results":"41","hashOfConfig":"27"},{"size":1163,"mtime":1610057781325,"results":"42","hashOfConfig":"27"},{"size":6135,"mtime":1610110518794,"results":"43","hashOfConfig":"27"},{"size":6479,"mtime":1610114697733,"results":"44","hashOfConfig":"27"},{"size":5756,"mtime":1610058314589,"results":"45","hashOfConfig":"27"},{"size":11048,"mtime":1610114446295,"results":"46","hashOfConfig":"27"},{"size":2788,"mtime":1610114549678,"results":"47","hashOfConfig":"27"},{"size":4241,"mtime":1610112545117,"results":"48","hashOfConfig":"27"},{"size":5988,"mtime":1610063473513,"results":"49","hashOfConfig":"27"},{"size":10828,"mtime":1610112572953,"results":"50","hashOfConfig":"27"},{"size":5230,"mtime":1610063369165,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1eeay3c",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"54"},"/home/gustavo/Meeting-Place_frontend/src/index.js",[],["108","109"],"/home/gustavo/Meeting-Place_frontend/src/reportWebVitals.js",[],"/home/gustavo/Meeting-Place_frontend/src/AppRoutes.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/search/Search.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/chat/Chat.js",[],"/home/gustavo/Meeting-Place_frontend/src/components/topics/TopicCreation.js",["110"],"import React from 'react';\nimport \"./TopicCreationStyle.css\"\nimport { DefaultButton,Modal, PrimaryButton } from 'office-ui-fabric-react';\nimport { FontSizes, FontWeights } from '@fluentui/theme';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport axios from 'axios';\nimport { Toggle } from 'office-ui-fabric-react/lib/Toggle';\nimport CommunitySearchComponent from '../community/CommunitySearchComponent'\n\nclass TopicCreation extends React.Component{\n    constructor(params){\n        super(params)\n        this.state={\n            title:'',\n            body:'',\n            token: params.token,\n            imageURL: null,\n            communityID: null,\n            openModal: false,\n            imageModal: false,\n            communityModal: false\n        }\n        \n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    handleChange(event){\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n        \n    }\n\n    getFile(event) {\n        console.log(event)\n\n        let reader = new FileReader();\n        reader.readAsDataURL(event[0]);\n        reader.onload =() =>{\n          this.setState({\n              imageURL: reader.result\n          })\n        }\n    }\n    \n    async createTopic(){\n        await axios({\n            method: 'post',\n            url: 'http://localhost:8080/api/topic',\n            headers: {\"Authorization\": 'Bearer ' + this.state.token},\n            data:{\n                header: this.state.title,\n                body: this.state.body,\n                imageURL: this.state.imageURL,\n                communityID: this.state.communityID,\n                mainTopicID: null\n            }\n        }).then(res=>{\n            alert(res.response.status)\n            if(typeof res.response.status !== 'undefined' && res.response.status === 201)\n                window.location.reload()\n        })\n        .catch(error => console.log(error))\n    }\n\n    imageRender(){\n        if(this.state.imageURL !== null)\n            return(\n                <div style={{display:'flex', justifyContent:'center'}}>\n                    <img style={{margin:'auto',width:'70%', borderRadius:'8px'}} alt=\"topic Image\" src={this.state.imageURL}/>\n                </div>\n                \n            )\n    }\n\n    modalRender(){\n        console.log(\"STATE -> \" + JSON.stringify(this.state.imageModal))\n        if(this.state.imageModal === true)\n           return(\n                <Modal\n                titleAriaId={\"TESTE\"}\n                isOpen={true}\n                onDismiss={true}\n                isBlocking={false}\n                \n                containerClassName={\"contentStyles.container\"}\n                >\n                    <div className='modal_container'>\n                        <div className=\"modal_title_component\">\n                            <h2 >Upload an image for your topic</h2>\n                        </div>\n                        <div className=\"modal_top_component\">\n                            <input type=\"file\" name=\"file\"  onChange={event => this.getFile(event.target.files)}/>\n                        </div>\n                        <div className=\"modal_middle_component\" >\n                            {this.imageRender()}\n                        </div>\n                        <div className=\"modal_bottom_component\" style={{display:'flex', justifyContent:'space-between', }}>\n                            <DefaultButton text=\"Cancel\" onClick={()=> this.setState({\n                                imageModal: false,\n                                communityModal:false,\n                                openModal:false,\n                                imageURL: null\n                            })}/>\n                            \n                            <PrimaryButton text=\"Choose\"/>\n                        </div>\n                    </div>\n                </Modal>\n           )\n\n           else if(this.state.communityModal === true && this.state.imageModal === false)\n            return(\n                    <Modal\n                    titleAriaId={\"TESTE\"}\n                    isOpen={true}\n                    onDismiss={true}\n                    isBlocking={false}\n                    //dragOptions={true}\n                    containerClassName={\"contentStyles.container\"}\n                    >\n                        <div className='modal_container'>\n                            <div className=\"modal_title_component\">\n                                <h2 >Post your topic in a community</h2>\n                            </div>\n                            <div className=\"modal_top_component\" >\n                                <CommunitySearchComponent token ={this.state.token}/>\n                            </div>\n                            <div className=\"modal_bottom_component\" style={{display:'flex', justifyContent:'space-between', }}>\n                                <DefaultButton text=\"Cancel\" onClick={()=> this.setState({\n                                    imageModal: false,\n                                    communityModal:false,\n                                    openModal:false,\n                                    imageURL: null\n                                })}/>\n                                \n                                <PrimaryButton text=\"Choose\"/>\n                            </div>\n                        </div>\n                    </Modal>\n            )\n    }\n    render(){\n        return(\n            <div className=\"timeline_component_container\">\n                <div className=\"topic_creation_container\">\n                    <div className=\"topic_creation_title\">\n                        <p style={{ fontSize: FontSizes.size18, fontWeight:FontWeights.regular}}>Express Yourself</p>\n                    </div>\n                    <div  className=\"topic_creation_top_buttons\">\n                    \n                        <DefaultButton text=\"To Community\" onClick={() => this.setState({\n                            openModal: true,\n                            imageModal:false,\n                            communityModal:true\n                        })}/> \n            \n                        <Toggle label=\"Visibility\" defaultChecked onText=\"Only Fans\" offText=\"Public\"/>\n                        <DefaultButton text=\"Upload Image\" onClick={() => this.setState({\n                            openModal: true,\n                            imageModal:true,\n                            communityModal:false\n                        })}/> \n                        {this.modalRender()}\n                    </div>\n                    <div className=\"topic_creation_fields\">\n                        <TextField placeholder=\"Title\" multiline resizable={false} name='title' onChange={this.handleChange}/>\n                        <TextField  placeholder=\"Body\" multiline autoAdjustHeight name='body' onChange={this.handleChange}/>    \n                        {this.imageRender()}\n                    </div>\n                    <div className=\"topic_creation_bottom_buttons\">\n                        <PrimaryButton text=\"Create\" onClick={() => this.createTopic()}/> \n                    </div>                   \n                </div>\n            </div>\n        );  \n    }\n        \n    \n       \n}\n\nexport default TopicCreation;","/home/gustavo/Meeting-Place_frontend/src/components/conversations/ConversationBar.js",[],"/home/gustavo/Meeting-Place_frontend/src/components/messages/Messages.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/authentication/SignIn.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/user/Signup.js",[],"/home/gustavo/Meeting-Place_frontend/src/components/messages/box/MessageBox.js",[],"/home/gustavo/Meeting-Place_frontend/src/components/conversations/ConversationInfo.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/social/following/Following.js",["111","112","113"],"import React from 'react';\nimport Cookies from 'universal-cookie';\nimport axios from 'axios'; \nimport \"../../../style/PageModel.css\"\nimport \"../SocialStyle.css\"\nimport ProfileBar from \"../../../components/profile/ProfileBar.js\"\nimport ConversationBar from \"../../../components/conversations/ConversationBar\"\nimport { getTheme } from '@fluentui/react';\nimport { Persona, PersonaSize } from 'office-ui-fabric-react/lib/Persona';\nimport { PrimaryButton,DefaultButton } from 'office-ui-fabric-react';\nimport { FontSizes, FontWeights } from '@fluentui/theme';\nimport {  Redirect } from 'react-router-dom';\n\n\nclass Following extends React.Component{\n    constructor(params){\n        super()\n        this.state={\n            cookies: new Cookies(),\n            following: [],\n            userID: params.userID,\n            date: new Date(),\n            theme: getTheme(),\n            conversations: {},\n            redirect: false,\n            redirectUserID: ''\n        } \n    }\n    componentDidMount(){\n        this.fetchData();\n        \n        this.timerID = setInterval(\n            () => this.tick(),\n            10000\n        );\n    }\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n    tick() {\n    \n        this.setState({\n            date: new Date(),\n        });\n    }\n    async fetchData() {\n        await axios({\n            method: 'patch',\n            url: 'http://localhost:8080/api/get/following',\n            headers: {\"Authorization\": 'Bearer ' + this.state.cookies.get(\"JWT\")},\n            data:{\n                userID: this.state.userID\n            }\n        }).then(res=>{\n            this.setState({\n                following: res.data\n            })\n        })\n        .catch(error => {\n            console.log(error);\n        });\n    }\n\n    async fetchConversation (param){\n        await axios({\n            method: 'patch',\n            url: 'http://localhost:8080/api/conversation/by/owner',\n            headers: {\"Authorization\": 'Bearer ' + this.state.cookies.get(\"JWT\")},\n            data:{\n                userID: param\n            }\n        }).then(res=>{\n            console.log(JSON.stringify(res.data))\n            this.setState({\n                conversations: res.data\n            })\n            \n        })\n        .catch(error => {\n            console.log(error);\n            return null\n        });\n    }\n    async setRedirect(userID){\n        console.log(\"PARAMS => \" + userID)\n        await this.fetchConversation(userID)\n        this.setState({\n            redirect: true,\n            redirectUserID:userID\n        },()=>{\n            console.log(\"STATE => \" + JSON.stringify(this.state.redirectUserID))    \n        })\n    }\n\n    render(){\n        if(this.state.redirect === false)\n            return(\n                <div>\n        \n                    <div className=\"social_component_container\">\n                        <div >\n                        <p style={{ fontSize: FontSizes.size18, fontWeight:FontWeights.regular, textAlign:'center'}}>Following</p>\n                        {this.state.following.map((flw)=> \n                            <div className=\"personas_container\"> \n                                <Persona\n                                {...{\n                                    imageUrl: (flw.imageURL === null) ?  flw.imageURL : \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSaNwMYAh1BP0Zhiy6r_gvjMMegcosFo70BUw&usqp=CAU\",\n                                    text: flw.name,\n                                    secondaryText: flw.email\n                                }}\n                                size={PersonaSize.size48}\n                                imageAlt=\"Conversation picture\"\n                                />\n                                <DefaultButton text =\"See Profile\"  href={\"/profile/\"+flw.email+'/'+'0'}/>\n                                <PrimaryButton onClick={() => this.setRedirect(flw.email)} text=\"Send Message\"/>\n                            </div>\n                        )}\n                        </div>\n                    </div>\n        \n                </div>\n            );\n            else{\n            \n                return(\n                    <Redirect to={'/chat/'+this.state.redirectUserID+\"/false/\"+(typeof this.state.conversations.conversationID === 'undefined'? this.state.redirectUserID: this.state.conversations.conversationID)}/>\n                )\n                \n            }\n        }\n    \n}\n\n\nexport default Following;","/home/gustavo/Meeting-Place_frontend/src/pages/social/followers/Followers.js",["114","115","116"],"import React from 'react';\nimport { FontSizes, FontWeights } from '@fluentui/theme';\nimport Cookies from 'universal-cookie';\nimport axios from 'axios'; \nimport \"../../../style/PageModel.css\"\nimport \"../SocialStyle.css\"\nimport ProfileBar from \"../../../components/profile/ProfileBar.js\"\nimport ConversationBar from \"../../../components/conversations/ConversationBar\"\nimport { getTheme } from '@fluentui/react';\nimport { Persona, PersonaSize } from 'office-ui-fabric-react/lib/Persona';\nimport { PrimaryButton,DefaultButton } from 'office-ui-fabric-react';\nimport { Redirect } from 'react-router-dom';\n\nclass Followers extends React.Component{\n    constructor(params){\n        super()\n        this.state={\n            cookies: new Cookies(),\n            followers: [],\n            userID: params.userID,\n            date: new Date(),\n            theme: getTheme(),\n            conversations: {},\n            redirect: false,\n            redirectUserID: ''\n        } \n    }\n    componentDidMount(){\n        this.fetchData();\n        this.timerID = setInterval(\n            () => this.tick(),\n            10000\n        );\n    }\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n    tick() {\n    \n        this.setState({\n            date: new Date(),\n        });\n    }\n    async fetchData(){\n        \n        await axios({\n            method: 'patch',\n            url: 'http://localhost:8080/api/get/followers',\n            headers: {\"Authorization\": 'Bearer ' + this.state.cookies.get(\"JWT\")},\n            data:{\n                userID: this.state.userID\n            }\n        }).then(res=>{\n            console.log(\"FOLLOWERS RESPONSE -> \" + JSON.stringify(res.data))\n            console.log(\"FOLLOWERS USER ID-> \" + JSON.stringify(this.state.userID))\n            this.setState({\n                followers: res.data\n            })\n        })\n        .catch(error => {\n            console.log(error);\n        });\n    }\n    async setRedirect(userID){\n        console.log(\"PARAMS => \" + userID)\n        await this.fetchConversation(userID)\n        this.setState({\n            redirect: true,\n            redirectUserID:userID\n        },()=>{\n            console.log(\"STATE => \" + JSON.stringify(this.state.redirectUserID))    \n        })\n    }\n    async fetchConversation (param){\n        await axios({\n            method: 'patch',\n            url: 'http://localhost:8080/api/conversation/by/owner',\n            headers: {\"Authorization\": 'Bearer ' + this.state.cookies.get(\"JWT\")},\n            data:{\n                userID: param\n            }\n        }).then(res=>{\n            \n            this.setState({\n                conversations: res.data\n            })\n            \n        })\n        .catch(error => {\n            console.log(error);\n            return null\n        });\n    }\n    render(){\n        if(this.state.redirect === false)\n            return(\n                <div>\n                    <div className=\"social_component_container\" >\n                        <div className=\"socail_info_container\">\n                        <p style={{ fontSize: FontSizes.size18, fontWeight:FontWeights.regular, textAlign:'center'}}>Followers</p>\n                        {this.state.followers.map((follower)=> \n                            <div className=\"personas_container\"> \n                                <Persona\n                                {...{\n                                    imageUrl: (follower.imageURL === null) ?  follower.imageURL : \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSaNwMYAh1BP0Zhiy6r_gvjMMegcosFo70BUw&usqp=CAU\",\n                                    text: follower.name,\n                                    secondaryText: follower.email\n                                }}\n                                size={PersonaSize.size48}\n                                imageAlt=\"Conversation picture\"\n                                />\n                                <DefaultButton  text =\"See Profile\"  href={\"/profile/\"+follower.email+'/'+'0'}/>\n                                <PrimaryButton onClick={() => this.setRedirect(follower.email)} text=\"Send Message\"/>\n                            </div>\n                        )}\n                        </div>\n                    </div>\n    \n                </div>\n            );\n            else{\n                \n                return(\n                    <Redirect to={'/chat/'+this.state.redirectUserID+\"/false/\"+(typeof this.state.conversations.conversationID === 'undefined'? this.state.redirectUserID: this.state.conversations.conversationID)}/>\n                )\n                \n            }\n    }\n    \n}\n\nexport default Followers;","/home/gustavo/Meeting-Place_frontend/src/pages/timeline/Timeline.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/community/Community.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/community/CommunityOptions.js",[],"/home/gustavo/Meeting-Place_frontend/src/components/community/CommunityComponent.js",["117"],"/home/gustavo/Meeting-Place_frontend/src/components/topics/TopicComponent.js",[],"/home/gustavo/Meeting-Place_frontend/src/components/community/CommunityCreationComponent.js",["118"],"/home/gustavo/Meeting-Place_frontend/src/components/community/UserCommunitiesComponent.js",["119"],"/home/gustavo/Meeting-Place_frontend/src/components/community/CommunitySearchComponent.js",[],"/home/gustavo/Meeting-Place_frontend/src/components/search/user/NewUserSearch.js",["120"],"import { Redirect } from \"react-router-dom\"\nimport axios from 'axios';\nimport { DefaultButton, PrimaryButton } from 'office-ui-fabric-react';\nimport { FontSizes, FontWeights } from '@fluentui/theme';\nimport React from 'react'\nimport \"../../../pages/social/SocialStyle.css\"\nimport { Persona, PersonaSize } from 'office-ui-fabric-react/lib/Persona';\nimport { TextField } from '@fluentui/react';\nimport \"../../community/UserCommunitiesStyle.css\"\nimport \"./SearchComponentStyle.css\"\n\nclass UserSearchComponent extends React.Component{\n    constructor(params){\n        super(params)\n        this.state={\n            token: params.token,\n            users: [],\n            date: new Date(),\n            conversations: {},\n            redirect: false,\n            redirectUserID: '',\n            searchInput: ''\n        }\n      this.fetchData = this.fetchData.bind(this)\n      this.handleChange = this.handleChange.bind(this)\n    }\n\n    componentDidMount(){\n\n        this.timerID = setInterval(\n            () => this.tick(),\n            1000\n        );\n    }\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n    tick() {\n        \n        this.fetchData();\n        this.setState({\n            date: new Date(),\n        });\n    }\n    handleChange(event){\n        \n        this.setState({\n            searchInput: event.target.value\n        })\n        this.fetchData()\n    }\n    async fetchData(){\n        console.log(\"INPUT -> \" + this.state.searchInput)\n        console.log(\"token -> \" + this.state.token)\n       if(this.state.searchInput !== ''){\n            await axios({\n                method: 'patch',\n                url: 'http://localhost:8080/api/search/user',\n                headers: {\"Authorization\": 'Bearer ' + this.state.token},\n                data:{\n                    userID: this.state.searchInput\n                }\n            }).then(res=>{\n                console.log(\"RESPONSE -> \" +JSON.stringify(res.data))\n                this.setState({\n                    users: res.data\n                })\n            })\n            .catch(error => console.log(error))\n        }\n    }\n    async fetchConversation (param){\n        await axios({\n            method: 'patch',\n            url: 'http://localhost:8080/api/conversation/by/owner',\n            headers: {\"Authorization\": 'Bearer ' + this.state.token},\n            data:{\n                userID: param\n            }\n        }).then(res=>{\n            console.log(JSON.stringify(res.data))\n            this.setState({\n                conversations: res.data\n            })\n            \n        })\n        .catch(error => {\n            console.log(error);\n            return null\n        });\n    }\n    async setRedirect(userID){\n        console.log(\"PARAMS => \" + userID)\n        await this.fetchConversation(userID)\n        this.setState({\n            redirect: true,\n            redirectUserID:userID\n        },()=>{\n            console.log(\"STATE => \" + JSON.stringify(this.state.redirectUserID))    \n        })\n    }\n    async follow (params){\n\n        await axios({\n            method: 'post',\n            url: 'http://localhost:8080/api/follow',\n            headers: {\"Authorization\": 'Bearer ' + this.state.token},\n            data: {\n                subjectID: params,\n                community: false\n            }\n        }).then(()=>{\n            this.fetchData()\n        })\n        .catch();\n    }\n\n    async unfollow (params) {\n        await axios({\n            method: 'delete',\n            url: 'http://localhost:8080/api/unfollow',\n            headers: {\"Authorization\": 'Bearer ' + this.state.token},\n            data: {\n                subjectID: params,\n                community: false\n            }\n        }).then(()=>{\n            this.fetchData()\n        })\n        .catch();\n    }\n\n    render(){\n        if(this.state.redirect === false)\n        return(\n            <div>\n                <div className=\"search_component\">\n                <div>\n                  <p style={{ fontSize: FontSizes.size18, fontWeight:FontWeights.regular, textAlign:'center'}}>Search User</p>\n                </div>\n                <div className=\"search_box_container\">\n                    <TextField placeholder=\"Search Community\" onChange={this.handleChange}/>\n                </div>\n                \n                    \n                <div>\n                    {this.state.users.map((user)=> \n                        <div className=\"personas_container\"> \n                            <Persona\n                            {...{\n                                imageUrl: (user.imageURL === null) ?  user.imageURL : \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSaNwMYAh1BP0Zhiy6r_gvjMMegcosFo70BUw&usqp=CAU\",\n                                text: user.name,\n                                secondaryText: user.email\n                            }}\n                            size={PersonaSize.size48}\n                            imageAlt=\"Conversation picture\"\n                            />\n                            <DefaultButton  text =\"See Profile\"  href={\"/profile/\"+user.email+'/'+'0'}/>\n                            <PrimaryButton onClick={() => this.setRedirect(user.email)} text=\"Send Message\"/>\n                            {user.isFollowing ? <DefaultButton onClick={() => this.unfollow(user.email)} text=\"Unfollow\"/>: <PrimaryButton onClick={() => this.follow(user.email)} text=\"Follow\"/>}\n                        </div>\n                    )}\n                    </div>   \n                </div>\n                \n            </div>\n    \n            \n        );\n        else{\n            console.log(\"CONVERSATION ID -> \"+this.state.conversations.conversationID)\n            return(\n                <Redirect to={'/chat/'+this.state.redirectUserID+\"/false/\"+(typeof this.state.conversations.conversationID === 'undefined'? this.state.redirectUserID: this.state.conversations.conversationID)}/>\n            )\n            \n        }\n    }\n}\n\nexport default UserSearchComponent","/home/gustavo/Meeting-Place_frontend/src/components/profile/ProfileBar.js",["121","122","123"],"/home/gustavo/Meeting-Place_frontend/src/pages/profile/Profile.js",["124","125","126","127"],"import \"./ProfileStyle.css\"\nimport React from 'react';\nimport Cookies from 'universal-cookie';\nimport \"../../style/PageModel.css\"\nimport Conversations from \"../../components/conversations/ConversationBar\"\nimport axios from 'axios';\nimport { Persona, PersonaSize } from 'office-ui-fabric-react/lib/Persona';\nimport { DefaultButton, PrimaryButton } from 'office-ui-fabric-react';\nimport TopicComponent from '../../components/topics/TopicComponent'\nimport { Redirect } from \"react-router-dom\";\nimport Followers from '../social/followers/Followers'\nimport Following from '../social/following/Following'\n\nclass Profile extends React.Component{\n    constructor({match}){\n        super()\n        this.state={\n            userID: match.params.userID,\n            token: (new Cookies()).get(\"JWT\"),\n            profile: {},\n            topics: (typeof match.params.option === 'undefined' || match.params.option === '0'? true: false),\n            followers: (match.params.option === '1'? true: false),\n            following: (match.params.option === '2'? true: false)\n        }\n    }\n    componentDidMount(){\n        this.fetchData()\n    }\n    async fetchData () {\n        if(typeof this.state.token !== 'undefined'){\n            await axios({\n                method: 'patch',\n                url: 'http://localhost:8080/api/get/profile',\n                headers: {\"Authorization\": 'Bearer ' + this.state.token},\n                data:{\n                    userID: this.state.userID\n                }\n            }).then(res=>{\n                console.log(\"RESPONSE -> \" + JSON.stringify(res.data))\n                this.setState({\n                    profile: res.data\n                })\n            })\n            .catch()\n        }         \n    }\n    optionSelect(){\n        switch(true){\n            case this.state.followers:{\n                return(\n                    <Followers userID={this.state.userID}/>\n                )\n            }\n            case this.state.following:{\n                return(\n                    <Following userID={this.state.userID}/>    \n                )\n            }\n            case this.state.topics:{\n                return(\n                    <TopicComponent community={false} timeline={false} subjectID={this.state.userID} token={(new Cookies()).get('JWT')}/>\n                )\n            }\n            default:{\n                return(\n                    <TopicComponent community={false} timeline={false} subjectID={this.state.userID} token={(new Cookies()).get('JWT')}/>\n                )\n            }            \n        }\n    }\n    render(){\n        \n        return(\n            <div>\n                <div className=\"\">\n                    <div className=\"profile_component_container\">\n                        <div className='profile_background_image_container'>\n                            <img className='profile_background_image_style' alt=\"BACKGROUD IMG\"src= {(this.state.profile.backgroundImageURL === null) ?  this.state.profile.imageURL : \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSaNwMYAh1BP0Zhiy6r_gvjMMegcosFo70BUw&usqp=CAU\"}/>\n                        </div>\n                        <div className='profile_action_bar_container'>\n                            <div className=\"profile_persona_container\">\n                                <Persona\n                                    {...{\n                                        imageUrl: (this.state.profile.imageURL === null) ?  this.state.profile.imageURL : \"https://preview.redd.it/bq0p7ds60f461.png?width=522&format=png&auto=webp&s=ef1c8eacc400a29430bdc1d3a005270e7762e7c2\",\n                                        text: this.state.profile.name,\n                                        secondaryText:  this.state.profile.email\n                                    }}\n                                    size={PersonaSize.size120}\n                                    imageAlt=\"USER\"\n                                \n                                />\n                            </div>\n                            <div className=\"profile_action_bar_buttons_container\">\n                                <PrimaryButton text='Follow'/>\n                                <PrimaryButton text='Send Message'/>\n                                <DefaultButton text='Topics' href={'/profile/'+this.state.profile.email+'/'+'0'}/>\n                                <DefaultButton text='Following' href={'/profile/'+this.state.profile.email+'/'+'2'}/>\n                                <DefaultButton text='Followers' href={'/profile/'+this.state.profile.email+'/'+'1'}/>\n                                <DefaultButton text='Communities'/>\n                                <DefaultButton text='About'/>\n                                <DefaultButton text='Home' href='/'/>\n                            </div>\n                        </div>\n                        <div >\n                            {this.optionSelect()}                            \n                        </div>\n                    </div>\n                    \n                </div>\n             \n                <div className=\"right_components\">\n                    <Conversations />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Profile",{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":70,"column":21,"nodeType":"134","endLine":70,"endColumn":127},{"ruleId":"135","severity":1,"message":"136","line":6,"column":8,"nodeType":"137","messageId":"138","endLine":6,"endColumn":18},{"ruleId":"135","severity":1,"message":"139","line":7,"column":8,"nodeType":"137","messageId":"138","endLine":7,"endColumn":23},{"ruleId":"140","severity":1,"message":"141","line":114,"column":100,"nodeType":"142","messageId":"143","endLine":114,"endColumn":101},{"ruleId":"135","severity":1,"message":"136","line":7,"column":8,"nodeType":"137","messageId":"138","endLine":7,"endColumn":18},{"ruleId":"135","severity":1,"message":"139","line":8,"column":8,"nodeType":"137","messageId":"138","endLine":8,"endColumn":23},{"ruleId":"140","severity":1,"message":"141","line":112,"column":106,"nodeType":"142","messageId":"143","endLine":112,"endColumn":107},{"ruleId":"144","severity":1,"message":"145","line":84,"column":109,"nodeType":"146","messageId":"147","endLine":84,"endColumn":111},{"ruleId":"132","severity":1,"message":"133","line":104,"column":21,"nodeType":"134","endLine":104,"endColumn":127},{"ruleId":"135","severity":1,"message":"148","line":1,"column":10,"nodeType":"137","messageId":"138","endLine":1,"endColumn":18},{"ruleId":"140","severity":1,"message":"141","line":158,"column":98,"nodeType":"142","messageId":"143","endLine":158,"endColumn":99},{"ruleId":"140","severity":1,"message":"141","line":137,"column":109,"nodeType":"142","messageId":"143","endLine":137,"endColumn":110},{"ruleId":"140","severity":1,"message":"141","line":138,"column":108,"nodeType":"142","messageId":"143","endLine":138,"endColumn":109},{"ruleId":"140","severity":1,"message":"141","line":140,"column":115,"nodeType":"142","messageId":"143","endLine":140,"endColumn":116},{"ruleId":"135","severity":1,"message":"148","line":10,"column":10,"nodeType":"137","messageId":"138","endLine":10,"endColumn":18},{"ruleId":"140","severity":1,"message":"141","line":96,"column":108,"nodeType":"142","messageId":"143","endLine":96,"endColumn":109},{"ruleId":"140","severity":1,"message":"141","line":97,"column":111,"nodeType":"142","messageId":"143","endLine":97,"endColumn":112},{"ruleId":"140","severity":1,"message":"141","line":98,"column":111,"nodeType":"142","messageId":"143","endLine":98,"endColumn":112},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'ProfileBar' is defined but never used.","Identifier","unusedVar","'ConversationBar' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation"]
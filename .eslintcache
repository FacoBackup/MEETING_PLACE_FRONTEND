[{"/home/gustavo/Meeting-Place_frontend/src/index.js":"1","/home/gustavo/Meeting-Place_frontend/src/reportWebVitals.js":"2","/home/gustavo/Meeting-Place_frontend/src/AppRoutes.js":"3","/home/gustavo/Meeting-Place_frontend/src/pages/search/Search.js":"4","/home/gustavo/Meeting-Place_frontend/src/pages/authentication/SignIn.js":"5","/home/gustavo/Meeting-Place_frontend/src/pages/user/Signup.js":"6","/home/gustavo/Meeting-Place_frontend/src/pages/timeline/Timeline.js":"7","/home/gustavo/Meeting-Place_frontend/src/pages/community/Community.js":"8","/home/gustavo/Meeting-Place_frontend/src/components/community/CommunityComponent.js":"9","/home/gustavo/Meeting-Place_frontend/src/components/topics/TopicComponent.js":"10","/home/gustavo/Meeting-Place_frontend/src/pages/community/options/CommunityOptions.js":"11","/home/gustavo/Meeting-Place_frontend/src/pages/conversation/Conversation.js":"12","/home/gustavo/Meeting-Place_frontend/src/pages/profile/Profile.js":"13","/home/gustavo/Meeting-Place_frontend/src/components/profile/bar/ProfileBarComponent.js":"14","/home/gustavo/Meeting-Place_frontend/src/Host.js":"15","/home/gustavo/Meeting-Place_frontend/src/components/community/creation/CommunityCreationComponent.js":"16","/home/gustavo/Meeting-Place_frontend/src/components/messages/NewNewMessageComponent.js":"17","/home/gustavo/Meeting-Place_frontend/src/components/messages/SendMessageComponent.js":"18","/home/gustavo/Meeting-Place_frontend/src/components/profile/options/UserCommunitiesComponent.js":"19","/home/gustavo/Meeting-Place_frontend/src/components/topics/creation/TopicCreationComponent.js":"20","/home/gustavo/Meeting-Place_frontend/src/components/profile/options/UserAboutComponent.js":"21","/home/gustavo/Meeting-Place_frontend/src/components/conversations/bar/ConversationBarComponent.js":"22","/home/gustavo/Meeting-Place_frontend/src/components/conversations/information/ConversationInfoComponent.js":"23","/home/gustavo/Meeting-Place_frontend/src/components/search/user/UserSearchComponent.js":"24","/home/gustavo/Meeting-Place_frontend/src/components/search/community/CommunitySearchComponent.js":"25","/home/gustavo/Meeting-Place_frontend/src/components/social/following/FollowingComponent.js":"26","/home/gustavo/Meeting-Place_frontend/src/components/social/followers/FollowersComponent.js":"27","/home/gustavo/Meeting-Place_frontend/src/components/community/users/CommunityUsersComponent.js":"28","/home/gustavo/Meeting-Place_frontend/src/components/community/about/CommunityAboutComponent.js":"29","/home/gustavo/Meeting-Place_frontend/src/components/community/related/CommunityRelatedComponent.js":"30","/home/gustavo/Meeting-Place_frontend/src/components/messages/box/MessageBoxComponent.js":"31","/home/gustavo/Meeting-Place_frontend/src/functions/topics/DeleteTopic.js":"32","/home/gustavo/Meeting-Place_frontend/src/functions/topics/UpdateTopic.js":"33","/home/gustavo/Meeting-Place_frontend/src/functions/social/UnfollowUser.js":"34","/home/gustavo/Meeting-Place_frontend/src/functions/community/FollowCommunity.js":"35","/home/gustavo/Meeting-Place_frontend/src/functions/social/FollowUser.js":"36","/home/gustavo/Meeting-Place_frontend/src/components/topics/box/TopicBoxComponet.js":"37","/home/gustavo/Meeting-Place_frontend/src/pages/front/Front.js":"38","/home/gustavo/Meeting-Place_frontend/src/components/front/news/FrontNewsComponent.js":"39","/home/gustavo/Meeting-Place_frontend/src/components/front/bar/FrontSideBarComponent.js":"40","/home/gustavo/Meeting-Place_frontend/src/components/front/trending/FrontTrendingComponent.js":"41"},{"size":306,"mtime":1610796863727,"results":"42","hashOfConfig":"43"},{"size":362,"mtime":1610796863727,"results":"44","hashOfConfig":"43"},{"size":1450,"mtime":1610826238768,"results":"45","hashOfConfig":"43"},{"size":979,"mtime":1610796863727,"results":"46","hashOfConfig":"43"},{"size":4633,"mtime":1610804274000,"results":"47","hashOfConfig":"43"},{"size":6905,"mtime":1610822860001,"results":"48","hashOfConfig":"43"},{"size":1311,"mtime":1610836685014,"results":"49","hashOfConfig":"43"},{"size":1234,"mtime":1610796863727,"results":"50","hashOfConfig":"43"},{"size":10296,"mtime":1610796897170,"results":"51","hashOfConfig":"43"},{"size":5072,"mtime":1610836633074,"results":"52","hashOfConfig":"43"},{"size":3616,"mtime":1610796863727,"results":"53","hashOfConfig":"43"},{"size":2472,"mtime":1610796897170,"results":"54","hashOfConfig":"43"},{"size":12112,"mtime":1610842660126,"results":"55","hashOfConfig":"43"},{"size":6444,"mtime":1610841846399,"results":"56","hashOfConfig":"43"},{"size":112,"mtime":1610804105263,"results":"57","hashOfConfig":"43"},{"size":11561,"mtime":1610796863727,"results":"58","hashOfConfig":"43"},{"size":8001,"mtime":1610796897170,"results":"59","hashOfConfig":"43"},{"size":6134,"mtime":1610796897170,"results":"60","hashOfConfig":"43"},{"size":3050,"mtime":1610838273931,"results":"61","hashOfConfig":"43"},{"size":12762,"mtime":1610835490454,"results":"62","hashOfConfig":"43"},{"size":7687,"mtime":1610796863727,"results":"63","hashOfConfig":"43"},{"size":6432,"mtime":1610796897170,"results":"64","hashOfConfig":"43"},{"size":4224,"mtime":1610727893159,"results":"65","hashOfConfig":"43"},{"size":5373,"mtime":1610796863727,"results":"66","hashOfConfig":"43"},{"size":4314,"mtime":1610796863727,"results":"67","hashOfConfig":"43"},{"size":4527,"mtime":1610838057120,"results":"68","hashOfConfig":"43"},{"size":4452,"mtime":1610838172732,"results":"69","hashOfConfig":"43"},{"size":8865,"mtime":1610796863727,"results":"70","hashOfConfig":"43"},{"size":11602,"mtime":1610796863727,"results":"71","hashOfConfig":"43"},{"size":2950,"mtime":1610796863727,"results":"72","hashOfConfig":"43"},{"size":4708,"mtime":1610796897170,"results":"73","hashOfConfig":"43"},{"size":528,"mtime":1610796897170,"results":"74","hashOfConfig":"43"},{"size":585,"mtime":1610796897170,"results":"75","hashOfConfig":"43"},{"size":453,"mtime":1610796863727,"results":"76","hashOfConfig":"43"},{"size":492,"mtime":1610796863727,"results":"77","hashOfConfig":"43"},{"size":449,"mtime":1610796863727,"results":"78","hashOfConfig":"43"},{"size":9773,"mtime":1610826008773,"results":"79","hashOfConfig":"43"},{"size":800,"mtime":1610796897170,"results":"80","hashOfConfig":"43"},{"size":1280,"mtime":1610796897170,"results":"81","hashOfConfig":"43"},{"size":1579,"mtime":1610796897170,"results":"82","hashOfConfig":"43"},{"size":1984,"mtime":1610796897170,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"1eeay3c",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"86"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"86"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"/home/gustavo/Meeting-Place_frontend/src/index.js",[],["171","172"],"/home/gustavo/Meeting-Place_frontend/src/reportWebVitals.js",[],"/home/gustavo/Meeting-Place_frontend/src/AppRoutes.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/search/Search.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/authentication/SignIn.js",["173"],"import React, {Component } from 'react';\nimport axios from 'axios';\nimport {Redirect} from 'react-router-dom';\nimport Cookies from 'universal-cookie';\nimport localIpUrl from 'local-ip-url';\nimport \"../../style/authentication/SigninStyle.css\"\n// import { DefaultButton, PrimaryButton } from 'office-ui-fabric-react';\nimport Button from '@material-ui/core/Button';\n// import { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport Host from '../../Host'\nimport TextField from '@material-ui/core/TextField'\nimport Alert from '@material-ui/lab/Alert';\n\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nconst theme = createMuiTheme({\n    palette: {\n      type: \"dark\"\n    }\n  });\n\nclass SignIn extends Component {\n    constructor(){\n        super()\n        this.state={\n            email: '',\n            password:'',\n            accepted: false,\n            cookies: new Cookies(),\n            \n        }\n        this.handleChangeEmail = this.handleChangeEmail.bind(this);\n        this.handleChangePassword = this.handleChangePassword.bind(this);\n    }\n    \n    \n    componentDidMount(){\n        this.checkToken()\n    }\n    \n    checkToken (){     \n        if(typeof this.state.cookies.get(\"JWT\") !== 'undefined'){\n            this.setState({\n                accepted:true\n            })\n        }\n    }\n\n    handleChangeEmail (event)  {\n        \n        this.setState({\n            email: event.target.value\n        })\n        event.preventDefault();\n    }\n    handleChangePassword (event)  {\n        this.setState({\n            password: event.target.value\n        })\n        event.preventDefault();\n    }\n\n    handleSubmit = async () => {\n    \n        await axios({\n            method: 'put',\n            url: Host()+'api/login',\n            headers:{'Access-Control-Allow-Origin': '*'} ,\n            data: {\n                userID: this.state.email,\n                password: this.state.password,\n                ip: localIpUrl('public')\n            }\n            })\n            .then(response => {   \n                this.state.cookies.set('JWT',response.data,{path:'/'});\n                this.state.cookies.set('ID',this.state.email,{path:'/'});\n                this.setState({\n                    accepted:true\n                })    \n            })\n            .catch(error => {\n                if(typeof error.response !== 'undefined' && error.response.status === 401)\n                    alert(\"Wrong password or email\")\n                else\n                    alert(\"Some error occurred (\"+error+ \").\")\n            })\n    }\n    \n    render(){\n    \n        if(this.state.accepted)\n            return (    \n                <Redirect to='/'/>\n            );\n        else{\n            return (\n                <div className=\"sign_in_container\">\n                    <ThemeProvider theme={theme}>\n                    <div className=\"sign_in_component\">\n                        <div className=\"sign_in_title_container\">\n                            <h2>Sign In</h2>\n                            {/* <p style={{ fontSize: FontSizes.size24, fontWeight:FontWeights.semibold }}>Sign in</p> */}\n                        </div>\n                        <div className=\"sign_input_container\">\n                            <TextField \n                                variant=\"outlined\" \n                                label=\"Email address\" \n                                \n                                multiline \n                            \n                                onChange={this.handleChangeEmail}/>\n                            <TextField\n                                variant=\"filled\" \n                                type=\"password\" \n                        \n                                autoComplete=\"current-password\" \n                                label=\"Password\" \n                                onChange={this.handleChangePassword}/>\n                        </div>\n\n                        <div className=\"sign_button_container\">\n                            <Button \n                                disableElevation \n                                \n                                variant='contained' \n                                color=\"primary\" onClick={this.handleSubmit}>SIGN IN</Button>\n                            <Button disableElevation style={{fontWeight:'bold'}} variant='contained' color=\"default\" href=\"/creation\">CREATE AN ACCOUNT</Button>\n                        </div>\n\n                    </div>\n                    </ThemeProvider>\n                </div>\n            );    \n        }  \n    }\n}\n\n\n\nexport default (SignIn)","/home/gustavo/Meeting-Place_frontend/src/pages/user/Signup.js",["174"],"import React, {Component} from 'react';\nimport axios from 'axios';\nimport {Redirect} from 'react-router-dom';\nimport \"../../style/authentication/SignupStyle.css\";\n\nimport Moment from 'moment';\nimport Host from '../../Host'\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField'\nimport { MenuItem, Select } from '@material-ui/core';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nconst theme = createMuiTheme({\n    palette: {\n      type: \"dark\"\n    }\n  });\n\nclass SignUp extends Component{\n    constructor(){\n        super()\n        this.state={\n            sent: false,\n            email: '',\n            password: '', \n            name: '',\n            phone: '',\n            birth: '',\n            gender:'Gender',\n            nationality: ''\n                }\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n    \n    handleChange(event){\n        this.setState({\n            [event.target.name]: event.target.value \n        })\n    }\n    \n    async handleSubmit(){\n        console.log(this.state.email)\n        console.log(this.state.password)\n        console.log(this.state.birth)\n        console.log(this.state.phone)\n        console.log(this.state.gender)\n        await axios({\n            method: 'post',\n            url: Host()+'api/user',\n            data: {\n                email: this.state.email,\n                password: this.state.password,\n                userName: this.state.name,\n                gender: this.state.gender,\n                nationality: this.state.nationality,\n                birthDate: Date.parse(Moment(this.state.birth.replace(\"_\", \"\")).format('DD/MM/yyyy')),\n                cityOfBirth: '',\n                phoneNumber: (this.state.phone).replace(\"_\",\"\"),\n                admin: false,\n            }\n            })\n        .then(() => {   \n            this.setState({\n               sent: true\n            });\n        })\n        .catch(error => {\n            console.log(error)\n            if(this.state.email !== '')\n                alert(\"Some error occurred, maybe this email is already taken.\")\n            else alert(\"Some error occurred.\")\n        })\n    }\n\n    getErrorMessage (value) {\n        return value.length >= 8 ? '' : `Input value must be more or equal to 8 characters.`;\n    };\n\n    render(){\n        \n        if(!this.state.sent){\n            return (\n                <div  className=\"sign_up_container\">\n                    <ThemeProvider theme={theme}>\n                    <div className=\"sign_up_component\">\n                        <div className=\"sign_up_title_container\" >\n                            <h2>Sign up</h2>\n                        </div>\n                        <div className=\"sign_up_input_container\">\n                            \n                                \n                                <TextField \n                                    label=\"Name\" \n                                    name=\"name\" \n                                    variant=\"outlined\"\n                                    onChange={this.handleChange}\n                                \n                                />\n                            \n                            <TextField \n                                label=\"Email address\" \n                                name=\"email\" \n                                variant=\"outlined\"\n                                onChange={this.handleChange}\n                               \n                                />\n                      \n                            <TextField\n                                type=\"password\"\n                                label=\"Password\"\n                                name=\"password\"\n                                variant=\"outlined\"\n                                onChange={this.handleChange}\n                                                                \n                            />\n                            <TextField \n                                label=\"Phone number\" \n                                name=\"phone\" \n                                variant=\"outlined\"\n                                onChange={this.handleChange} \n                                \n                                />\n                            <TextField \n                                label=\"Nationality\" \n                                type=\"date\" \n                                name=\"nationality\" \n                                variant=\"outlined\"\n                                onChange={this.handleChange} \n                                defaultValue=\"2020-01-15\"\n                               \n                            />\n                            <TextField \n                                label=\"Birthday\" \n                                type=\"date\" \n                                name=\"birth\" \n                                variant=\"outlined\"\n                                onChange={this.handleChange} \n                                defaultValue=\"2020-01-15\"\n                               \n                                />\n                            <InputLabel id=\"select-id\">Gender</InputLabel>\n                            <Select \n                                labelId=\"select-id\"\n                                name=\"gender\" \n                               \n                                variant=\"standard\"\n                                value={this.state.gender} \n                                \n                                onChange={this.handleChange}> \n\n                                <MenuItem key={\"male\"} value=\"male\"> \n                                    Male\n                                </MenuItem>\n                                    \n                                \n                                <MenuItem key={\"female\"} value=\"female\">\n                                    Female\n                                </MenuItem>\n                               \n                            </Select>\n                   \n                        </div>\n                      \n                        <div className=\"sign_up_buttons_container\" >\n                            <Button disableElevation style={{fontWeight:'bold'}}  color=\"default \" variant='contained'href=\"/authenticate\"> Sign in</Button>\n                            <Button disableElevation style={{fontWeight:'bold'}}  color=\"primary\" variant='contained' style={{ float: 'right'}}onClick={this.handleSubmit}>Create Account</Button>\n                        </div>\n                        \n                    </div>\n                    </ThemeProvider>\n                </div>\n            );  \n        }\n        else\n            return (<Redirect to={'/authenticate'}/>);\n    } \n}\n \nexport default SignUp;","/home/gustavo/Meeting-Place_frontend/src/pages/timeline/Timeline.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/community/Community.js",[],"/home/gustavo/Meeting-Place_frontend/src/components/community/CommunityComponent.js",[],"/home/gustavo/Meeting-Place_frontend/src/components/topics/TopicComponent.js",["175"],"/home/gustavo/Meeting-Place_frontend/src/pages/community/options/CommunityOptions.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/conversation/Conversation.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/profile/Profile.js",[],"/home/gustavo/Meeting-Place_frontend/src/components/profile/bar/ProfileBarComponent.js",["176","177","178"],"/home/gustavo/Meeting-Place_frontend/src/Host.js",[],"/home/gustavo/Meeting-Place_frontend/src/components/community/creation/CommunityCreationComponent.js",[],"/home/gustavo/Meeting-Place_frontend/src/components/messages/NewNewMessageComponent.js",[],"/home/gustavo/Meeting-Place_frontend/src/components/messages/SendMessageComponent.js",[],"/home/gustavo/Meeting-Place_frontend/src/components/profile/options/UserCommunitiesComponent.js",[],"/home/gustavo/Meeting-Place_frontend/src/components/topics/creation/TopicCreationComponent.js",[],"/home/gustavo/Meeting-Place_frontend/src/components/profile/options/UserAboutComponent.js",[],"/home/gustavo/Meeting-Place_frontend/src/components/conversations/bar/ConversationBarComponent.js",["179"],"import React, { Component } from 'react';\nimport Cookies from 'universal-cookie';\nimport axios from 'axios'; \nimport \"./../../../style/conversation/ConversationBarStyle.css\";\nimport { Persona, PersonaSize } from 'office-ui-fabric-react/lib/Persona';\nimport { FontSizes, FontWeights } from '@fluentui/theme';\nimport { Link } from 'react-router-dom';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { getTheme } from '@fluentui/react';\nimport Host from '../../../Host'\n\nclass ConversationBarComponent extends Component{\n    constructor(){\n        super()\n        this.state={\n            cookies: new Cookies(),\n            conversations: [],\n            theme: getTheme(),\n            searchInput:\"\",\n            profiles:[]\n        }\n        this.handleChange = this.handleChange.bind(this)\n    }\n    async handleChange(event){\n        \n        this.setState({\n            searchInput: event.target.value\n        })\n        if(this.state.searchInput !== '')\n            await this.fetchSearch()\n        else if (this.state.searchInput === '')\n            await this.fetchConversations()\n    }\n    componentDidMount(){\n        this.fetchConversations()\n        this.timerID = setInterval(\n            () => this.tick(),\n            60000\n        );\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n\n    tick() {\n        this.setState({\n            date: new Date(),\n        });\n    }\n\n    async fetchConversations (){\n    \n        await axios({\n            method: 'get',\n            url: Host()+'api/conversation/all',\n            headers: {\"Authorization\": 'Bearer ' + this.state.cookies.get(\"JWT\")},\n        }).then(res=>{\n            console.log(\"CONVERSATIONS -> \" + JSON.stringify(res.data))\n            this.setState({\n                conversations: res.data\n            })\n        })\n        .catch(error => {\n            console.log(error);\n        });\n    \n      \n    }\n    async fetchProfile(conversationID){\n        await axios({\n            method: 'patch',\n            url: Host()+'api/get/simplified/user/profile',\n            headers: {\"Authorization\": 'Bearer ' + (new Cookies()).get(\"JWT\")},\n            data: {\n                userID: conversationID\n            }\n        }).then(res=>{\n            if(res.data !== {})\n                this.setState({\n                    profiles: res.data\n                })\n            \n        })\n        .catch(error => {\n            console.log(error)\n        });\n    }\n    async fetchSearch (){    \n        await axios({\n            method: 'patch',\n            url: Host()+'api/conversation/search',\n            headers: {\"Authorization\": 'Bearer '+this.state.cookies.get(\"JWT\")},\n            data: {\n                conversationID: this.state.searchInput\n            }\n        }).then(res=>{\n            console.log(JSON.stringify(res.data))\n            this.setState({\n                conversations: res.data\n            })\n        })\n        .catch(error => console.log(error));\n    }\n    renderPersona(data, isGroup){\n        switch(isGroup){\n            case true:{\n\n                return(\n\n                    <div>\n                        \n                        <Link style={{textDecoration: 'none'}} to ={\"/chat/\" + ((data.name).replace(this.state.cookies.get('ID'), \"\")) +\"/\"+JSON.stringify(isGroup) +\"/\"+data.id}>\n                            <Persona\n                                {...{\n                                    imageUrl:(data.imageURL !== \"\" ? data.imageURL : null),\n                                    text:data.name ,\n                                    secondaryText: \"Group\"\n                                }}\n                                size={PersonaSize.size40}\n                                imageAlt=\"Conversation\"\n                            />\n                            { typeof data.latestMessage !== 'undefined'? <p style={{ color:\"#3b3a39\" ,fontSize: FontSizes.size12, fontWeight:FontWeights.regular}}>{(new Date(data.latestMessage).toTimeString())}</p>: \"\"}\n                       \n                        </Link>\n                            \n                        \n                    </div>\n                    )\n            }\n            case false:{\n                console.log(\"LATEST MESSAGE -> \" + data.latestMessage)\n                return(\n                    <div className=\"conversation_persona_container\" >\n                        <Link style={{textDecoration: 'none'}} to ={\"/chat/\" + ((data.name).replace(this.state.cookies.get('ID'), \"\")) +\"/\"+JSON.stringify(isGroup) +\"/\"+data.id}>\n                            <Persona\n                                {...{\n                                    imageUrl:(data.imageURL !== \"\" ? data.imageURL : null),\n                                    text: data.userName,\n                                    secondaryText: (data.unreadMessages === 0 ? \"Private\" : \"Unseen Messages: \" +data.unreadMessages)\n                                }}\n                                size={PersonaSize.size48}\n                                imageAlt=\"Conversation\"\n                            />\n                            \n                            {typeof data.latestMessage !== 'undefined'? <p style={{color:\"#3b3a39\",textAlign:'center', fontSize: FontSizes.size12, fontWeight:FontWeights.regular}}>{(new Date(data.latestMessage).toString()).substring(0,24)}</p>: \"\"}\n                        </Link>\n                    </div>\n                )\n            }\n            default:{\n                return(\n                    null\n                )\n            }\n        }\n    }\n    render(){\n        return(\n            <div className=\"conversation_bar_component_container\">\n                <div className=\"conversation_title_container\">\n                    <p style={{ fontSize: FontSizes.size18, fontWeight:FontWeights.regular}}>Conversations</p>\n                </div>\n                <div className=\"conversation_personas\">\n                {this.state.conversations.map((chat) => \n                    \n                    this.renderPersona(chat,chat.isGroup)\n                )}\n                    \n                </div>\n                {/* <div className=\"conversation_search\">\n                    <TextField placeholder=\"Search conversation\" onChange={this.handleChange} disabled={true}/>\n                </div> */}\n                \n            </div>\n        );\n    }\n}   \n\nexport default ConversationBarComponent;","/home/gustavo/Meeting-Place_frontend/src/components/conversations/information/ConversationInfoComponent.js",[],"/home/gustavo/Meeting-Place_frontend/src/components/search/user/UserSearchComponent.js",[],"/home/gustavo/Meeting-Place_frontend/src/components/search/community/CommunitySearchComponent.js",[],"/home/gustavo/Meeting-Place_frontend/src/components/social/following/FollowingComponent.js",[],"/home/gustavo/Meeting-Place_frontend/src/components/social/followers/FollowersComponent.js",[],"/home/gustavo/Meeting-Place_frontend/src/components/community/users/CommunityUsersComponent.js",[],"/home/gustavo/Meeting-Place_frontend/src/components/community/about/CommunityAboutComponent.js",[],"/home/gustavo/Meeting-Place_frontend/src/components/community/related/CommunityRelatedComponent.js",[],"/home/gustavo/Meeting-Place_frontend/src/components/messages/box/MessageBoxComponent.js",[],"/home/gustavo/Meeting-Place_frontend/src/functions/topics/DeleteTopic.js",[],"/home/gustavo/Meeting-Place_frontend/src/functions/topics/UpdateTopic.js",[],"/home/gustavo/Meeting-Place_frontend/src/functions/social/UnfollowUser.js",[],"/home/gustavo/Meeting-Place_frontend/src/functions/community/FollowCommunity.js",[],"/home/gustavo/Meeting-Place_frontend/src/functions/social/FollowUser.js",[],"/home/gustavo/Meeting-Place_frontend/src/components/topics/box/TopicBoxComponet.js",["180","181"],"import React from 'react';\nimport \"../../../style/topics/TopicCreationStyle.css\"\nimport { DefaultButton,Modal, PrimaryButton, TextField } from 'office-ui-fabric-react';\nimport { FontSizes, FontWeights } from '@fluentui/theme';\nimport { Persona, PersonaSize } from 'office-ui-fabric-react/lib/Persona';\nimport Cookies from 'universal-cookie';\nimport DeleteTopic from '../../../functions/topics/DeleteTopic'\nimport UpdateTopic from '../../../functions/topics/UpdateTopic'\nimport Button from '@material-ui/core/Button'\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubble';\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\nimport ThumbDownAltIcon from '@material-ui/icons/ThumbDownAlt';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ArchiveIcon from '@material-ui/icons/Archive';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Avatar from '@material-ui/core/Avatar'\nclass TopicBoxComponent extends React.Component{\n    constructor(params){\n        super()\n        this.state={\n            topic: params.topic,\n            editMode: false,\n            headerInput: null,\n            bodyInput: null,\n            deleteModal: false,\n        }\n        this.updateTopic = this.updateTopic.bind(this)\n        this.deleteTopic = this.deleteTopic.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.renderDeleteButton = this.renderDeleteButton.bind(this)\n    }\n    \n    renderImage(topic){\n        if(typeof topic.imageURL !== 'undefined')\n            return(\n                <div className=\"topic_image_container\">\n                    <img style={{borderRadius:'8px', width:'100%', height: '100%'}}alt=\"Topic\" src={topic.imageURL}/>\n                </div>\n            )\n    }\n\n    renderModal(topicID){\n        if(this.state.deleteModal === true)\n            return(\n                <Modal\n                titleAriaId={\"TESTE\"}\n                isOpen={true}\n                onDismiss={true}\n                isBlocking={false}\n                \n                > \n                    <div style={{marginTop: '18%',display: 'grid', justifyContent:'center', placeItems: 'center', rowGap:'1vh'}}>\n\n                        <DefaultButton text=\"Are you sure?\" onClick={() => this.deleteTopic(topicID)}/>\n                        <PrimaryButton text=\"Cancel\" onClick={() => this.setState({\n                            deleteModal: false\n                        })}/>\n                    </div>\n                </Modal>\n            )\n    }\n\n    async deleteTopic(topicID){\n        await DeleteTopic(topicID);\n    \n        window.location.reload()\n    }\n\n    async updateTopic(topicID){\n        \n        await UpdateTopic(topicID, this.state.headerInput, this.state.bodyInput);\n        this.setState({\n            editMode: false\n        })\n        window.location.reload()\n        \n    }\n\n    renderEditButton(creator){\n        if(creator === (new Cookies()).get(\"ID\")){\n            return(\n                \n                <Button onClick={() => this.setState({ editMode: true})}><EditIcon/>Edit</Button>\n                \n            )\n        }\n    }\n    renderDeleteButton(creator){\n        \n        if(creator === (new Cookies()).get(\"ID\"))\n            return(\n                <Button onClick={() => this.setState({ deleteModal: true})}><DeleteIcon/>Delete</Button>\n            )\n    }\n    renderEditMode(){\n       \n\n        if(this.state.editMode === true)\n            return(\n                <div>  \n                    <div className=\"topic_container\"> \n                        <div className=\"topic_creator_persona_container\">\n                        <Avatar\n                            style={{ margin:'auto',height: '85px', width: '85px' }}\n                            src = {(typeof this.state.topic.communityImageURL !== 'undefined')? this.state.topic.communityImageURL  : (typeof this.state.topic.creatorImageURL !== 'undefined')? this.state.topic.creatorImageURL: null }\n                            alt=\"user\"\n                        />\n                        <p>{(typeof this.state.topic.communityName !== 'undefined')? this.state.topic.communityName  : this.state.topic.creatorName} {this.state.topic.creatorID}</p>                                    \n                        {/* <Persona\n                            {...{\n                                imageUrl: (typeof this.state.topic.communityImageURL !== 'undefined')? this.state.topic.communityImageURL  : (typeof this.state.topic.creatorImageURL !== 'undefined')? this.state.topic.creatorImageURL: null ,\n                                text: (typeof this.state.topic.communityName !== 'undefined')? this.state.topic.communityName  : this.state.topic.creatorName,\n                                secondaryText: this.state.topic.creatorID,\n                            }}\n                            size={PersonaSize.size56}\n                            imageAlt=\"Subject\"\n                        /> */}\n                            \n                            <p style={{ fontSize: FontSizes.size14, fontWeight:FontWeights.regular, color:\"#3b3a39\"}}>Created on: {(new Date(this.state.topic.creationDate)).toLocaleString()}</p>\n                        </div>\n                        <div className=\"topic_fields_container\">\n                            <TextField defaultValue={this.state.topic.header} label=\"New Title\" multiline name=\"headerInput\" onChange={this.handleChange}/>\n                            <TextField defaultValue={this.state.topic.body} label=\"New Body\" multiline name=\"bodyInput\" onChange={this.handleChange}/>\n                            \n                        </div>\n                \n                        {this.renderImage(this.state.topic)}  \n                        \n                    \n                        <div className=\"topic_buttons_container\">\n                            \n                            <DefaultButton text=\"Cancel\" onClick={() =>\n                                this.setState({\n                                    editMode: false\n                                })\n                            }/>\n                            <PrimaryButton text=\"Save Changes\" onClick={() => this.updateTopic(this.state.topic.id)}/>\n                        </div>\n                    </div>\n                </div>\n            )\n    }\n\n    handleChange(event){\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n   \n    render(){\n        return(\n            <div className=\"profile_topics_container\">\n                {this.renderEditMode()}\n                \n                <div className=\"topic_container\"> \n                    <div className=\"topic_creator_persona_container\">\n                        {/* <Persona\n                            {...{\n                                imageUrl: (typeof this.state.topic.communityImageURL !== 'undefined')? this.state.topic.communityImageURL  : (typeof this.state.topic.creatorImageURL !== 'undefined')? this.state.topic.creatorImageURL: null ,\n                                text: (typeof this.state.topic.communityName !== 'undefined')? this.state.topic.communityName  : this.state.topic.creatorName,\n                                secondaryText: this.state.topic.creatorID,\n                            }}\n                            size={PersonaSize.size56}\n                            imageAlt=\"Subject\"\n                        /> */}\n                        <Avatar\n                            style={{ marginRight:'1vw',height: '85px', width: '85px' }}\n                            src = {(typeof this.state.topic.communityImageURL !== 'undefined')? this.state.topic.communityImageURL  : (typeof this.state.topic.creatorImageURL !== 'undefined')? this.state.topic.creatorImageURL: null }\n                            alt=\"user\"\n                        />\n                        <h4 style={{fontWeight:'500'}}>{(typeof this.state.topic.communityName !== 'undefined')? this.state.topic.communityName  : this.state.topic.creatorName}</h4>                                    \n                        <h5 style={{fontWeight:'500', color:'#aaadb1'}}>Created on: {(new Date(this.state.topic.creationDate)).toLocaleString()}</h5>\n                    </div>\n                    <div className=\"topic_fields_container\">\n                        <p style={{ fontSize: FontSizes.size18, fontWeight:FontWeights.regular}}>{this.state.topic.header}</p>\n                        <p style={{ fontSize: FontSizes.size16, fontWeight:FontWeights.semilight}}>{this.state.topic.body}</p>\n                    </div>\n                    {this.renderModal(this.state.topic.id)}\n                    {this.renderImage(this.state.topic)}  \n                    <div className=\"topic_buttons_container\">\n                        <ButtonGroup size=\"large\" variant=\"text\">\n                            <Button> <ThumbUpIcon/>0</Button>\n                            <Button> <ThumbDownAltIcon/>0</Button>\n                            <Button> <ChatBubbleIcon/>0</Button>\n                            <Button> <ArchiveIcon/>Archive</Button>\n                            {this.renderEditButton(this.state.topic.creatorID)}\n                            {this.renderDeleteButton(this.state.topic.creatorID)}\n                            \n                        </ButtonGroup>\n                        {/* <DefaultButton text=\"Like\" disabled={true}/> \n                        <DefaultButton text=\"Dislike\" disabled={true}/> \n                        <DefaultButton text=\"Comment\" disabled={true}/> \n                        <DefaultButton text=\"Share\" disabled={true}/>  */}\n                        \n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TopicBoxComponent","/home/gustavo/Meeting-Place_frontend/src/pages/front/Front.js",[],"/home/gustavo/Meeting-Place_frontend/src/components/front/news/FrontNewsComponent.js",[],"/home/gustavo/Meeting-Place_frontend/src/components/front/bar/FrontSideBarComponent.js",[],"/home/gustavo/Meeting-Place_frontend/src/components/front/trending/FrontTrendingComponent.js",[],{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","severity":1,"message":"187","line":12,"column":8,"nodeType":"188","messageId":"189","endLine":12,"endColumn":13},{"ruleId":"190","severity":1,"message":"191","line":169,"column":119,"nodeType":"192","endLine":169,"endColumn":144},{"ruleId":"186","severity":1,"message":"193","line":9,"column":10,"nodeType":"188","messageId":"189","endLine":9,"endColumn":17},{"ruleId":"186","severity":1,"message":"194","line":8,"column":10,"nodeType":"188","messageId":"189","endLine":8,"endColumn":17},{"ruleId":"186","severity":1,"message":"195","line":8,"column":19,"nodeType":"188","messageId":"189","endLine":8,"endColumn":30},{"ruleId":"186","severity":1,"message":"196","line":11,"column":18,"nodeType":"188","messageId":"189","endLine":11,"endColumn":21},{"ruleId":"186","severity":1,"message":"197","line":8,"column":10,"nodeType":"188","messageId":"189","endLine":8,"endColumn":19},{"ruleId":"186","severity":1,"message":"194","line":5,"column":10,"nodeType":"188","messageId":"189","endLine":5,"endColumn":17},{"ruleId":"186","severity":1,"message":"195","line":5,"column":19,"nodeType":"188","messageId":"189","endLine":5,"endColumn":30},"no-native-reassign",["198"],"no-negated-in-lhs",["199"],"no-unused-vars","'Alert' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Shimmer' is defined but never used.","'Persona' is defined but never used.","'PersonaSize' is defined but never used.","'Fab' is defined but never used.","'TextField' is defined but never used.","no-global-assign","no-unsafe-negation"]
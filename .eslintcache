[{"/home/gustavo/Meeting-Place_frontend/src/index.js":"1","/home/gustavo/Meeting-Place_frontend/src/reportWebVitals.js":"2","/home/gustavo/Meeting-Place_frontend/src/AppRoutes.js":"3","/home/gustavo/Meeting-Place_frontend/src/pages/search/Search.js":"4","/home/gustavo/Meeting-Place_frontend/src/components/search/user/UserSearch.js":"5","/home/gustavo/Meeting-Place_frontend/src/pages/chat/Chat.js":"6","/home/gustavo/Meeting-Place_frontend/src/components/topics/TopicCreation.js":"7","/home/gustavo/Meeting-Place_frontend/src/components/conversations/ConversationBar.js":"8","/home/gustavo/Meeting-Place_frontend/src/components/profile/Profile.js":"9","/home/gustavo/Meeting-Place_frontend/src/components/messages/Messages.js":"10","/home/gustavo/Meeting-Place_frontend/src/pages/authentication/SignIn.js":"11","/home/gustavo/Meeting-Place_frontend/src/pages/user/Signup.js":"12","/home/gustavo/Meeting-Place_frontend/src/components/messages/box/MessageBox.js":"13","/home/gustavo/Meeting-Place_frontend/src/components/conversations/ConversationInfo.js":"14","/home/gustavo/Meeting-Place_frontend/src/pages/social/following/Following.js":"15","/home/gustavo/Meeting-Place_frontend/src/pages/social/followers/Followers.js":"16","/home/gustavo/Meeting-Place_frontend/src/pages/timeline/Timeline.js":"17"},{"size":306,"mtime":1609887057076,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1609887057076,"results":"20","hashOfConfig":"19"},{"size":1096,"mtime":1609887494357,"results":"21","hashOfConfig":"19"},{"size":875,"mtime":1609887057076,"results":"22","hashOfConfig":"19"},{"size":3513,"mtime":1609940484784,"results":"23","hashOfConfig":"19"},{"size":2318,"mtime":1609887057076,"results":"24","hashOfConfig":"19"},{"size":7154,"mtime":1609931956855,"results":"25","hashOfConfig":"19"},{"size":3833,"mtime":1609935400188,"results":"26","hashOfConfig":"19"},{"size":11211,"mtime":1609941832319,"results":"27","hashOfConfig":"19"},{"size":6979,"mtime":1609941718287,"results":"28","hashOfConfig":"19"},{"size":3619,"mtime":1609941829019,"results":"29","hashOfConfig":"19"},{"size":4769,"mtime":1609887057076,"results":"30","hashOfConfig":"19"},{"size":1479,"mtime":1609887057076,"results":"31","hashOfConfig":"19"},{"size":3079,"mtime":1609936820304,"results":"32","hashOfConfig":"19"},{"size":4611,"mtime":1609941424193,"results":"33","hashOfConfig":"19"},{"size":4619,"mtime":1609941417097,"results":"34","hashOfConfig":"19"},{"size":1914,"mtime":1609932080411,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1eeay3c",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"38"},"/home/gustavo/Meeting-Place_frontend/src/index.js",[],["74","75"],"/home/gustavo/Meeting-Place_frontend/src/reportWebVitals.js",[],"/home/gustavo/Meeting-Place_frontend/src/AppRoutes.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/search/Search.js",[],"/home/gustavo/Meeting-Place_frontend/src/components/search/user/UserSearch.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/chat/Chat.js",[],"/home/gustavo/Meeting-Place_frontend/src/components/topics/TopicCreation.js",["76","77","78","79"],"import React from 'react';\nimport \"./TopicCreationStyle.css\"\nimport { DefaultButton, PrimaryButton } from 'office-ui-fabric-react';\nimport { FontSizes, FontWeights } from '@fluentui/theme';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport axios from 'axios';\nimport Dexie from \"dexie\";\nimport { Toggle } from 'office-ui-fabric-react/lib/Toggle';\nimport { Persona, PersonaSize } from 'office-ui-fabric-react/lib/Persona';\n\nclass TopicCreation extends React.Component{\n    constructor(params){\n        super(params)\n        this.state={\n            title:'',\n            body:'',\n            token: params.token,\n            imageURL: '',\n        }\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    handleChange(event){\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n        \n    }\n    \n    render(){\n        return(\n            <div className=\"timeline_component_container\">\n                {/* <DefaultButton text=\"Timeline\" disabled={true} style={{ fontSize: FontSizes.size16, fontWeight: FontWeights.semibold ,width:'auto'}} href=\"/signout\"/>\n                <DefaultButton text=\"My Topics\" disabled={true} style={{ fontSize: FontSizes.size16, fontWeight: FontWeights.semibold ,width:'auto'}} href=\"/signout\"/>\n                <PrimaryButton text=\"Create New\" disabled={true} style={{ fontSize: FontSizes.size16, fontWeight: FontWeights.semibold ,width:'auto'}} href=\"/signout\"/> */}\n                <div className=\"topic_creation_container\">\n                    <div className=\"topic_creation_title\">\n                        <p style={{ fontSize: FontSizes.size18, fontWeight:FontWeights.regular}}>Express Yourself</p>\n                    </div>\n                    <div  className=\"topic_creation_top_buttons\">\n                        <DefaultButton text=\"To Community\"/> \n                        <DefaultButton text=\"Upload Image\"/> \n                        <Toggle label=\"Visibility\" defaultChecked onText=\"Only Fans\" offText=\"Public\"/>\n                    </div>\n                    <div className=\"topic_creation_fields\">\n                        <TextField placeholder=\"Title\" multiline resizable={false} name='header' onChange={this.handleChange}/>\n                        <TextField  placeholder=\"Body\" multiline autoAdjustHeight name='body' onChange={this.handleChange}/>    \n                    </div>\n                    <div className=\"topic_creation_bottom_buttons\">\n                        <PrimaryButton text=\"Create\"/> \n                    </div>                   \n                </div>\n                <div className=\"topic_container\">\n                    <div className=\"topic_creator_persona_container\">\n                        <Persona\n                            {...{\n                                imageUrl:\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSaNwMYAh1BP0Zhiy6r_gvjMMegcosFo70BUw&usqp=CAU\",\n                                text: \"CREATOR NAME\",\n                                secondaryText: \"CREATOR EMAIL\"\n                            }}\n                            size={PersonaSize.size48}\n                            imageAlt=\"Profile Picture\"\n                        />\n                    </div>\n                    <div className=\"topic_fields_container\">\n                        <p style={{ fontSize: FontSizes.size18, fontWeight:FontWeights.regular}}>TITLE</p>\n                        <p style={{ fontSize: FontSizes.size16, fontWeight:FontWeights.semilight}}>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>\n                    </div>\n                    <div className=\"topic_image_container\">\n                        <img alt=\"Topic Image\" classname=\"topic_image\" src= \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSaNwMYAh1BP0Zhiy6r_gvjMMegcosFo70BUw&usqp=CAU\"/>\n                    </div>\n                    <div className=\"topic_buttons_container\">\n                        <DefaultButton text=\"Like\"/> \n                        <DefaultButton text=\"Dislike\"/> \n                        <DefaultButton text=\"Comment\"/> \n                        <DefaultButton text=\"Share\" disabled={true}/> \n                    </div>\n                </div>\n                <div className=\"topic_container\">\n                    <div className=\"topic_creator_persona_container\">\n                        <Persona\n                            {...{\n                                imageUrl:\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSaNwMYAh1BP0Zhiy6r_gvjMMegcosFo70BUw&usqp=CAU\",\n                                text: \"CREATOR NAME\",\n                                secondaryText: \"CREATOR EMAIL\"\n                            }}\n                            size={PersonaSize.size48}\n                            imageAlt=\"Profile Picture\"\n                        />\n                    </div>\n                    <div className=\"topic_fields_container\">\n                        <p style={{ fontSize: FontSizes.size18, fontWeight:FontWeights.regular}}>TITLE</p>\n                        <p style={{ fontSize: FontSizes.size16, fontWeight:FontWeights.semilight}}>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>\n                    </div>\n                    <div className=\"topic_image_container\">\n                        <img alt=\"Topic Image\" classname=\"topic_image\" src= \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSaNwMYAh1BP0Zhiy6r_gvjMMegcosFo70BUw&usqp=CAU\"/>\n                    </div>\n                    <div className=\"topic_buttons_container\">\n                        <DefaultButton text=\"Like\"/> \n                        <DefaultButton text=\"Dislike\"/> \n                        <DefaultButton text=\"Comment\"/> \n                        <DefaultButton text=\"Share\" disabled={true}/> \n                    </div>\n                </div>\n                <div className=\"timeline_end_container\">\n                    <p style={{ fontSize: FontSizes.size18, fontWeight:FontWeights.regular}}>You are all caught up for now</p>\n                </div>\n            </div>\n        );  \n    }\n        \n    \n       \n}\n\nexport default TopicCreation;","/home/gustavo/Meeting-Place_frontend/src/components/conversations/ConversationBar.js",[],"/home/gustavo/Meeting-Place_frontend/src/components/profile/Profile.js",[],"/home/gustavo/Meeting-Place_frontend/src/components/messages/Messages.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/authentication/SignIn.js",[],"/home/gustavo/Meeting-Place_frontend/src/pages/user/Signup.js",[],"/home/gustavo/Meeting-Place_frontend/src/components/messages/box/MessageBox.js",[],"/home/gustavo/Meeting-Place_frontend/src/components/conversations/ConversationInfo.js",["80","81"],"import React, { Component } from 'react';\nimport { NeutralColors } from '@fluentui/theme';\nimport { getTheme } from '@fluentui/react';\nimport axios from 'axios';\nimport { Persona, PersonaSize } from 'office-ui-fabric-react/lib/Persona';\nimport \"./ConversationInfoStyle.css\"\n\nclass ConversationInfo extends Component {\n    constructor(params){\n        super()\n        this.state={\n            theme: getTheme(),\n            conversation: {},\n            conversationID: params.conversationID,\n            isGroup: params.isGroup,\n            date: new Date(),\n            token: params.token,\n            userID: params.userID\n        }\n    }\n    \n    componentDidMount(){\n        this.FetchConversation()\n        this.timerID = setInterval(\n            () => this.tick(),\n            10000\n        );\n    }\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n    tick() {\n        this.setState({\n            date: new Date(),\n        });\n    }\n    \n\n    FetchConversation = async()=>{\n        \n        if(this.state.isGroup === true)\n            await axios({\n                method: 'post',\n                url: 'http://localhost:8080/api/get/conversation/group',\n                headers: {\"Authorization\": 'Bearer ' + this.state.token},\n                data: {\n                    conversationID: this.state.conversationID\n                }\n            }).then(res=>{\n                if(res.data != {})\n                    this.setState({\n                        conversation: res.data\n                    })\n            })\n            .catch(error => {\n                console.log(error)\n            });\n        else\n            await axios({\n                method: 'post',\n                url: 'http://localhost:8080/api/get/conversation/user',\n                headers: {\"Authorization\": 'Bearer ' + this.state.token},\n                data: {\n                    userID: this.state.conversationID\n                }\n            }).then(res=>{\n                if(res.data != {})\n                    this.setState({\n                        conversation: res.data\n                    })\n                \n            })\n            .catch(error => {\n                console.log(error)\n            });\n    \n    \n    } \n    render(){\n        return(\n            (\n                <div className=\"conversation_info_container\" style={{boxShadow: this.state.theme.effects.elevation8,backgroundColor: NeutralColors.white }}>\n                    \n                    <Persona\n                        {...{\n                            text: (typeof this.state.conversation.name === 'undefined' ? this.state.conversationID :  (this.state.isGroup === true ? this.state.conversation.name: this.state.conversation.name.replace(this.state.userID, ''))),\n                            secondaryText: this.state.conversation.about\n                        }}\n                        size={PersonaSize.size40}\n                        imageAlt=\"Conversation picture\"\n                    />\n                </div>\n            )\n        );\n    }\n}\n\nexport default ConversationInfo;","/home/gustavo/Meeting-Place_frontend/src/pages/social/following/Following.js",["82","83","84"],"/home/gustavo/Meeting-Place_frontend/src/pages/social/followers/Followers.js",["85"],"/home/gustavo/Meeting-Place_frontend/src/pages/timeline/Timeline.js",["86","87"],"import React, {Component} from 'react';\nimport Profile from \"../../components/profile/Profile\"\nimport Conversations from \"../../components/conversations/ConversationBar\";\nimport \"../timeline/TimelineStyle.css\";\nimport \"../../style/PageModel.css\"\nimport { Redirect } from 'react-router-dom';\nimport Cookies from 'universal-cookie';\nimport TopicCreation from '../../components/topics/TopicCreation'\nimport axios from 'axios';\nimport Dexie from \"dexie\";\n\nclass Timeline extends Component{\n  state={\n    cookies: new Cookies(),\n    topics: [],\n    date:new Date(),\n    db:  new Dexie('api_web_db')\n  }  \n\n\n  setupDB(){      \n    if(this.state.db.isOpen() === false){\n      \n        this.state.db.version(1).stores({\n            timeline: \"id,header,body,approved, creatorID, mainTopicID, creationDate, communityID, imageURL\"\n        })\n    }\n  }\n\n  async setTopics(){      \n    this.setState({\n        topics: await this.state.db.timeline.sortBy('creationDate')\n    })        \n  }\n  async fetchTimeline(){\n     \n    if(this.state.db.isOpen() === false){\n            \n      this.setupDB()\n      this.state.db.open().catch((error) => {\n          console.log(error)\n      }) \n    }\n\n    const data = await this.state.db.timeline.where(\"conversationID\").equals(this.state.conversationID).toArray()\n\n    //if(this.state.db.timeline)\n\n  }\n\n  render(){\n    if(typeof this.state.cookies.get(\"JWT\") !== 'undefined'){\n      return (\n        <div className=\"page_container\">\n            <div  className=\"center_component\">\n              <TopicCreation token={this.state.cookies.get(\"JWT\")}/>\n            </div>\n            <div className=\"left_components\">\n              <Profile/>\n            </div>\n            <div  className=\"right_components\" >\n              <Conversations/>\n            </div>\n        </div>\n      );\n    }\n    else\n      return (<Redirect to=\"/authenticate\"/>);\n      \n   \n  }\n}\n\nexport default Timeline;\n",{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":6,"column":8,"nodeType":"94","messageId":"95","endLine":6,"endColumn":13},{"ruleId":"92","severity":1,"message":"96","line":7,"column":8,"nodeType":"94","messageId":"95","endLine":7,"endColumn":13},{"ruleId":"97","severity":1,"message":"98","line":70,"column":25,"nodeType":"99","endLine":70,"endColumn":180},{"ruleId":"97","severity":1,"message":"98","line":96,"column":25,"nodeType":"99","endLine":96,"endColumn":180},{"ruleId":"100","severity":1,"message":"101","line":50,"column":29,"nodeType":"102","messageId":"103","endLine":50,"endColumn":31},{"ruleId":"100","severity":1,"message":"101","line":67,"column":29,"nodeType":"102","messageId":"103","endLine":67,"endColumn":31},{"ruleId":"92","severity":1,"message":"104","line":9,"column":10,"nodeType":"94","messageId":"95","endLine":9,"endColumn":23},{"ruleId":"92","severity":1,"message":"105","line":11,"column":25,"nodeType":"94","messageId":"95","endLine":11,"endColumn":40},{"ruleId":"92","severity":1,"message":"106","line":13,"column":10,"nodeType":"94","messageId":"95","endLine":13,"endColumn":14},{"ruleId":"92","severity":1,"message":"104","line":10,"column":10,"nodeType":"94","messageId":"95","endLine":10,"endColumn":23},{"ruleId":"92","severity":1,"message":"93","line":9,"column":8,"nodeType":"94","messageId":"95","endLine":9,"endColumn":13},{"ruleId":"92","severity":1,"message":"107","line":45,"column":11,"nodeType":"94","messageId":"95","endLine":45,"endColumn":15},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'Dexie' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'NeutralColors' is defined but never used.","'TooltipHostBase' is defined but never used.","'Link' is defined but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
[{"/home/gustavo/Meeting-Place-front-end/src/index.js":"1","/home/gustavo/Meeting-Place-front-end/src/App.js":"2","/home/gustavo/Meeting-Place-front-end/src/reportWebVitals.js":"3","/home/gustavo/Meeting-Place-front-end/src/components/creation/user/UserCreation.js":"4","/home/gustavo/Meeting-Place-front-end/src/components/footer/FooterBar.js":"5","/home/gustavo/Meeting-Place-front-end/src/components/navigation/NavBar.js":"6","/home/gustavo/Meeting-Place-front-end/src/components/authentication/logout.js":"7","/home/gustavo/Meeting-Place-front-end/src/components/authentication/Login.js":"8","/home/gustavo/Meeting-Place-front-end/src/components/home/profile/Profile.js":"9","/home/gustavo/Meeting-Place-front-end/src/components/home/Home.js":"10","/home/gustavo/Meeting-Place-front-end/src/components/home/search/ProfileSearch.js":"11","/home/gustavo/Meeting-Place-front-end/src/components/home/message/Chat.js":"12"},{"size":500,"mtime":1607976713768,"results":"13","hashOfConfig":"14"},{"size":1038,"mtime":1607976713768,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1607976713768,"results":"16","hashOfConfig":"14"},{"size":4330,"mtime":1607978680089,"results":"17","hashOfConfig":"14"},{"size":211,"mtime":1607711350169,"results":"18","hashOfConfig":"14"},{"size":1516,"mtime":1607976713768,"results":"19","hashOfConfig":"14"},{"size":849,"mtime":1607976713768,"results":"20","hashOfConfig":"14"},{"size":2731,"mtime":1607976713768,"results":"21","hashOfConfig":"14"},{"size":1397,"mtime":1607976713768,"results":"22","hashOfConfig":"14"},{"size":226,"mtime":1607976713768,"results":"23","hashOfConfig":"14"},{"size":4535,"mtime":1607976713768,"results":"24","hashOfConfig":"14"},{"size":2223,"mtime":1607976713768,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1wra1u8",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"28"},"/home/gustavo/Meeting-Place-front-end/src/index.js",[],["57","58"],"/home/gustavo/Meeting-Place-front-end/src/App.js",["59"],"import React from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Login from \"./components/authentication/Login\";\nimport Profile from \"./components/home/profile/Profile\";\nimport Creation from \"./components/creation/user/UserCreation\";\nimport Logout from \"./components/authentication/logout\";\nimport Home from \"./components/home/Home\"\nimport Search from \"./components/home/search/ProfileSearch\"\nimport Chat from \"./components/home/message/Chat\"\nfunction App() {\n  return (\n    <div>\n      \n      <Router>\n          <Switch>    \n              \n              <Route path=\"/\" exact component={Home}/>\n              <Route path=\"/chat/:email\" exact component={Chat}/>\n              <Route path=\"/search\" exact component={Search}/>\n              <Route path=\"/logout\" exact component={Logout}/>\n              <Route path=\"/login\" exact component={Login}/>\n              <Route path=\"/creation\" exact component={Creation}/>\n          </Switch>\n      </Router>\n    \n    </div>\n  );\n}\n\nexport default App;\n","/home/gustavo/Meeting-Place-front-end/src/reportWebVitals.js",[],"/home/gustavo/Meeting-Place-front-end/src/components/creation/user/UserCreation.js",["60","61","62","63","64"],"/home/gustavo/Meeting-Place-front-end/src/components/footer/FooterBar.js",[],["65","66"],"/home/gustavo/Meeting-Place-front-end/src/components/navigation/NavBar.js",["67"],"import React, {Component, useEffect, useState} from 'react';\nimport './Navigation.css';\nimport {Link} from 'react-router-dom';\nimport Cookies from 'universal-cookie';\n\nfunction Navigation (){\n    const [isLogged, setLogged] = useState(false);\n    const [path, setPath] = useState('login')\n    const cookies = new Cookies();\n    useEffect(()=>{\n        checkLogin();\n    })\n    function checkLogin() {\n        if(typeof cookies.get(\"JWT\") !== 'undefined'){\n            setLogged(true);\n            setPath('logout');\n        }\n        else{\n            setLogged(false);\n            setPath('login');\n        }    \n    }\n    return (\n        <nav className=\"nav-style\">\n            <h3>Nav here</h3>\n            <ul className=\"nav-links\">\n                <Link to='/search'>\n                    <button>Search</button>\n                </Link>\n                <Link to={'/'+ path}>\n                    {isLogged ? <button>logout</button> : <button>login</button>}\n                </Link>\n\n                {/* <Link to='/get'>\n                <li>GET</li>\n                </Link>\n                <Link to='/new/get'>\n                <li>NEW GET</li>\n                </Link>\n                <Link to='/patch'>\n                <li>PATCH</li>\n                </Link>\n                <Link to= '/post'>\n                <li>POST</li>\n                </Link>\n                <Link to='/delete'>\n                <li>DELETE</li>\n                </Link> */}\n            </ul>\n        </nav>\n    );\n}\n\n\nexport default Navigation;","/home/gustavo/Meeting-Place-front-end/src/components/authentication/logout.js",[],"/home/gustavo/Meeting-Place-front-end/src/components/authentication/Login.js",[],"/home/gustavo/Meeting-Place-front-end/src/components/home/profile/Profile.js",["68","69"],"import React, {useEffect, useState} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport Cookies from 'universal-cookie';\nimport axios from 'axios'; \nimport \"../../../style/cards.css\"\n\nfunction Profile(){\n \n    const [profile, setProfile] = useState({});\n    const cookies = new Cookies();\n    \n    useEffect(()=>{\n        fetchData();\n    },[]);\n    \n    const fetchData = async () => {\n        await axios({\n            method: 'get',\n            url: 'http://localhost:8080/api/user',\n            headers: {\"Authorization\": 'Bearer ' + cookies.get(\"JWT\").data}\n        }).then(res=>{\n            setProfile(res.data);\n        })\n        .catch(error => {\n            console.log(error)\n        });\n    }\n\n\n    return(\n        \n            <div className=\"Container\">\n            \n                <h3>Profile</h3>\n                <ul>\n                    <li>name: {profile.name}</li>\n                    <li>email: {profile.email}</li>\n                    <li>phoneNumber: {profile.phoneNumber}</li>\n                    <li>about: {profile.about}</li>\n                    <li>image: {profile.imageURL}</li>\n                    <li>birthDate: {profile.birthDate}</li>\n                    <li>cityOfBirth: {profile.cityOfBirth}</li>\n                    <li>nationality : {profile.nationality}</li>\n                </ul>\n\n            </div>\n\n        \n    );  \n}\n\nexport default Profile;","/home/gustavo/Meeting-Place-front-end/src/components/home/Home.js",[],"/home/gustavo/Meeting-Place-front-end/src/components/home/search/ProfileSearch.js",["70"],"import React, {useEffect, useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport Cookies from 'universal-cookie';\nimport axios from 'axios'; \nimport \"../../../style/cards.css\";\nimport NavBar from \"../../navigation/NavBar\";\n\nfunction ProfileSearch(props){\n    const [profile, setProfile] = useState({});\n    const [searchInput, setInput] = useState('');\n\n    const [isFollower, setIsFollower] = useState(false);\n    const [found, setFound] = useState(false);\n    const [searched, setSearched] = useState(false);\n\n    const cookies = new Cookies();\n\n    const fetchData = async () => {\n        await axios({\n            method: 'patch',\n            url: 'http://localhost:8080/api/user/search',\n            data: {\n                userID: searchInput\n            }\n        }).then(res=>{\n            setProfile(res);\n            setFound(true);\n            setSearched(true);\n            fetchIsFollower();\n        })\n        .catch(error => {\n             setFound(false);\n             setSearched(true);\n        });\n    }\n    \n    function handleChange (event)  {\n        setInput(event.target.value) ;\n    }\n\n    const fetchIsFollower = async () => {\n        await axios({\n            method: 'patch',\n            url: 'http://localhost:8080/api/follower',\n            headers: {\"Authorization\": 'Bearer '+cookies.get(\"JWT\").data},\n            data: {\n                userID: searchInput\n            }\n        }).then(res=>{\n           setIsFollower(res);\n        })\n        .catch();\n    }\n\n    async function follow (){\n        await axios({\n            method: 'post',\n            url: 'http://localhost:8080/api/follow',\n            headers: {\"Authorization\": 'Bearer ' + cookies.get(\"JWT\").data},\n            data: {\n                subjectID: profile.data.email,\n                community: false\n            }\n        }).then(res=>{\n           setIsFollower(true);\n        })\n        .catch();\n    }\n\n    async function unfollow () {\n        await axios({\n            method: 'delete',\n            url: 'http://localhost:8080/api/unfollow',\n            headers: {\"Authorization\": 'Bearer ' + cookies.get(\"JWT\").data},\n            data: {\n                subjectID: profile.data.email,\n                community: false\n            }\n        }).then(res=>{\n           setIsFollower(false);\n        })\n        .catch();\n    }\n\n    if(found && searched){\n        return(\n            <div>\n                <NavBar/>\n                <div className=\"Container\">\n                    \n                    <label>\n                        <input type=\"text\" name=\"email\" value={searchInput} onChange={handleChange}></input>\n                    </label>\n                    <button onClick={fetchData}>Search</button>\n            \n                    <h3>Profile</h3>\n                    <ul>\n                        <li>name: {profile.data.name}</li>\n                        <li>email: {profile.data.email}</li>\n                        <li>phoneNumber: {profile.data.phoneNumber}</li>\n                        <li>about: {profile.data.about}</li>\n                        <li>image: {profile.data.imageURL}</li>\n                        <li>birthDate: {profile.data.birthDate}</li>\n                        <li>cityOfBirth: {profile.data.cityOfBirth}</li>\n                        <li>nationality : {profile.data.nationality}</li>\n                    </ul>\n                    <button><Link to={'/chat/'+profile.data.email}>Send message</Link></button>\n                    {isFollower ? <button onClick={unfollow}>UNFOLLOW</button> : <button onClick={follow}>FOLLOW</button> }\n                </div>\n\n            </div>\n        );\n    }\n    else if(searched && !found)\n        return(\n            <div>\n                 <NavBar/>\n                <div className=\"Container\">\n                    <label>\n                        <input type=\"text\" name=\"email\" value={searchInput} onChange={handleChange}></input>\n                    </label>\n                    <button onClick={fetchData}>Search</button>\n                    <h3>Nothing found</h3>\n                </div>\n            </div>\n        );\n    else \n        return(\n            <div>\n                <NavBar/>\n                <div className=\"Container\">\n                    <label>\n                        <input type=\"text\" name=\"email\" value={searchInput} onChange={handleChange}></input>\n                    </label>\n                    <button onClick={fetchData}>Search</button>\n                </div>\n            </div>\n        );\n}\n\nexport default ProfileSearch;","/home/gustavo/Meeting-Place-front-end/src/components/home/message/Chat.js",["71","72"],"import React, {useEffect, useState} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport Cookies from 'universal-cookie';\nimport axios from 'axios'; \nimport \"../../../style/cards.css\";\n\nconst cookies = new Cookies();\nfunction Chat ({match}){\n    useEffect(()=>{\n        fetchMessages()\n    },[]);\n    const [conversation,setConversation] = useState([]);\n    //const [message ,setMessage] = useState('');\n    const [messageInput, setMessageInput] = useState('');\n    \n    const fetchMessages = async () =>{\n        await axios({\n            method: 'post',\n            url: 'http://localhost:8080/api/get/conversation',\n            headers: {\"Authorization\": 'Bearer ' + cookies.get(\"JWT\").data},\n            data: {\n                subjectID: match.params.email,\n                isGroup: false\n            }\n        }).then(res=>{\n            setConversation(res.data);\n        })\n        .catch(error => {\n            alert(match.params.email)\n            console.log(error);\n        });\n    }\n\n    async function send (){\n        await axios({\n            method: 'post',\n            url: 'http://localhost:8080/api/message',\n            headers: {\"Authorization\": 'Bearer ' + cookies.get(\"JWT\").data},\n            data: {\n                message: messageInput,\n                imageURL: null,\n                receiverID: match.params.email,\n                isGroup: false\n            }\n        }).then(()=>{\n            fetchMessages();\n        })\n        .catch(error => {\n            console.log(error);\n        });\n    };\n\n    function handleChange (event)  {\n        setMessageInput(event.target.value) ;\n    }\n\n    return(\n        <div>\n            <h1>Conversation with {match.params.email}</h1>\n            {conversation.map((message, index) => \n                <div>\n                    <h3>{message.content}</h3> \n                    <p> from {message.creatorID}</p>\n                    <p> read: {JSON.stringify(message.read)}</p>\n                </div>)}\n            <label>\n                <input type=\"text\" name=\"message\" value={messageInput} onChange={handleChange}></input>\n            </label>\n            <button onClick={send}>Send</button>\n        </div>\n    );\n\n}   \n\nexport default Chat;",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":4,"column":8,"nodeType":"79","messageId":"80","endLine":4,"endColumn":15},{"ruleId":"77","severity":1,"message":"81","line":1,"column":16,"nodeType":"79","messageId":"80","endLine":1,"endColumn":25},{"ruleId":"77","severity":1,"message":"82","line":15,"column":19,"nodeType":"79","messageId":"80","endLine":15,"endColumn":27},{"ruleId":"77","severity":1,"message":"83","line":35,"column":20,"nodeType":"79","messageId":"80","endLine":35,"endColumn":29},{"ruleId":"77","severity":1,"message":"84","line":36,"column":25,"nodeType":"79","messageId":"80","endLine":36,"endColumn":39},{"ruleId":"77","severity":1,"message":"85","line":37,"column":25,"nodeType":"79","messageId":"80","endLine":37,"endColumn":39},{"ruleId":"73","replacedBy":"86"},{"ruleId":"75","replacedBy":"87"},{"ruleId":"77","severity":1,"message":"81","line":1,"column":16,"nodeType":"79","messageId":"80","endLine":1,"endColumn":25},{"ruleId":"77","severity":1,"message":"88","line":2,"column":9,"nodeType":"79","messageId":"80","endLine":2,"endColumn":17},{"ruleId":"89","severity":1,"message":"90","line":14,"column":7,"nodeType":"91","endLine":14,"endColumn":9,"suggestions":"92"},{"ruleId":"77","severity":1,"message":"93","line":1,"column":16,"nodeType":"79","messageId":"80","endLine":1,"endColumn":25},{"ruleId":"77","severity":1,"message":"88","line":2,"column":9,"nodeType":"79","messageId":"80","endLine":2,"endColumn":17},{"ruleId":"89","severity":1,"message":"94","line":11,"column":7,"nodeType":"91","endLine":11,"endColumn":9,"suggestions":"95"},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'Profile' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'setAdmin' is assigned a value but never used.","'setGender' is assigned a value but never used.","'setNationality' is assigned a value but never used.","'setCityOfBirth' is assigned a value but never used.",["96"],["97"],"'Redirect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["98"],"'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchMessages'. Either include it or remove the dependency array.",["99"],"no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},"Update the dependencies array to be: [fetchData]",{"range":"104","text":"105"},"Update the dependencies array to be: [fetchMessages]",{"range":"106","text":"107"},[353,355],"[fetchData]",[303,305],"[fetchMessages]"]